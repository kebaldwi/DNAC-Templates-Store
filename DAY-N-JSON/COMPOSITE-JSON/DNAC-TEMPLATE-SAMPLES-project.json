[
  {
    "name": "DNAC-Templates-Samples",
    "tags": [],
    "templates": [
      {
        "name": "SystemManagement-Configuration",
        "description": "Global configurations on Target",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# System Management for Catalyst Only #}\n{% include \"DNAC-Templates-Samples/Sensitive-Info\" %}\n{% include \"DNAC-Templates-Samples/VLAN-Configuration\" %}\n\nno service pad\nservice timestamps debug datetime msec localtime\nservice timestamps log datetime msec localtime\nno platform punt-keepalive disable-kernel-core\n!\nspanning-tree mode rapid-pvst\nspanning-tree portfast default\nspanning-tree portfast bpduguard default\n!\n{%- include \"DNAC-Templates-Samples/ACL-Configuration\" -%}\n!\nsnmp-server location {{ snmpLocation }} \n{% for snmpCommunityString in snmpCommunityStrings %}\n  snmp-server community {{ snmpCommunityString['string'] }} RW 10\n{% endfor %}\n!\n{% for user in users %}\n  username {{ user.name }} priv {{ user.priv }} secret 9 {{ user.key }}\n{% endfor %}\n!\n",
        "rollbackTemplateContent": "",
        "templateParams": [
          {
            "parameterName": "snmpLocation",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": null
          }
        ],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# System Management for Catalyst Only #}\n{% include \"DNAC-Templates-Samples/Sensitive-Info\" %}\n{% include \"DNAC-Templates-Samples/VLAN-Configuration\" %}\n\nno service pad\nservice timestamps debug datetime msec localtime\nservice timestamps log datetime msec localtime\nno platform punt-keepalive disable-kernel-core\n!\nspanning-tree mode rapid-pvst\nspanning-tree portfast default\nspanning-tree portfast bpduguard default\n!\n{%- include \"DNAC-Templates-Samples/ACL-Configuration\" -%}\n!\nsnmp-server location {{ snmpLocation }} \n{% for snmpCommunityString in snmpCommunityStrings %}\n  snmp-server community {{ snmpCommunityString['string'] }} RW 10\n{% endfor %}\n!\n{% for user in users %}\n  username {{ user.name }} priv {{ user.priv }} secret 9 {{ user.key }}\n{% endfor %}\n!\n",
        "promotedTemplateParams": [
          {
            "parameterName": "snmpLocation",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": null
          }
        ],
        "customParamsOrder": false,
        "createTime": 1674762318741,
        "lastUpdateTime": 1675550157727,
        "latestVersionTime": 1674762318741,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "803f581e-579d-483f-b8cf-add3fd81f85d",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "IBNS2.0-Configuration",
        "description": "IBNS2.0 Policy Configurations to be added to Target. Must be added before Templates use them.",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# IBNS configurations build #}\n!\n{# Classifications #}\nclass-map type control subscriber match-all AAA_SVR_DOWN_AUTHD_HOST\n match authorization-status authorized\n match result-type aaa-timeout\n!\nclass-map type control subscriber match-all AAA_SVR_DOWN_UNAUTHD_HOST\n match authorization-status unauthorized\n match result-type aaa-timeout\n!\nclass-map type control subscriber match-all AUTHC_SUCCESS-AUTHZ_FAIL\n match authorization-status unauthorized\n match result-type success\n!\nclass-map type control subscriber match-all DOT1X\n match method dot1x\n!\nclass-map type control subscriber match-all DOT1X_FAILED\n match method dot1x\n match result-type method dot1x authoritative\n!\nclass-map type control subscriber match-all DOT1X_MEDIUM_PRIO\n match authorizing-method-priority gt 20\n!\nclass-map type control subscriber match-all DOT1X_NO_RESP\n match method dot1x\n match result-type method dot1x agent-not-found\n!\nclass-map type control subscriber match-all DOT1X_TIMEOUT\n match method dot1x\n match result-type method dot1x method-timeout\n!\nclass-map type control subscriber match-any IN_CRITICAL_AUTH\n match activated-service-template DefaultCriticalVoice_SRV_TEMPLATE\n!\nclass-map type control subscriber match-any IN_CRITICAL_AUTH_CLOSED_MODE\n match activated-service-template DefaultCriticalAuthVlan_SRV_TEMPLATE\n match activated-service-template DefaultCriticalVoice_SRV_TEMPLATE\n!\nclass-map type control subscriber match-all MAB\n match method mab\n!\nclass-map type control subscriber match-all MAB_FAILED\n match method mab\n match result-type method mab authoritative\n!\nclass-map type control subscriber match-none NOT_IN_CRITICAL_AUTH\n match activated-service-template DefaultCriticalVoice_SRV_TEMPLATE\n!\nclass-map type control subscriber match-none NOT_IN_CRITICAL_AUTH_CLOSED_MODE\n match activated-service-template DefaultCriticalAuthVlan_SRV_TEMPLATE\n match activated-service-template DefaultCriticalVoice_SRV_TEMPLATE\n!\n{# Policy Maps #}\n{# CLOSED 1X then MAB Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xClosedAuth_1X_MAB\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using dot1x retries 2 retry-time 0 priority 10\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  40 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate dot1x\n   20 terminate mab\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH_CLOSED_MODE do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH_CLOSED_MODE do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# CLOSED MAB then 1X Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xClosedAuth_MAB_1X\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using mab priority 20\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n  40 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate mab\n   20 terminate dot1x\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH_CLOSED_MODE do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH_CLOSED_MODE do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# LOW IMPACT 1X then MAB Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xLowImpactAuth_1X_MAB\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using dot1x retries 2 retry-time 0 priority 10\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   25 activate service-template DefaultCriticalAccess_SRV_TEMPLATE\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  40 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate dot1x\n   20 terminate mab\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# LOW IMPACT MAB then 1X Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xLowImpactAuth_MAB_1X\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using mab priority 20\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   25 activate service-template DefaultCriticalAccess_SRV_TEMPLATE\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n  40 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate mab\n   20 terminate dot1x\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# Open 1X then MAB Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xOpenAuth_1X_MAB\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using dot1x retries 2 retry-time 0 priority 10\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  40 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate dot1x\n   20 terminate mab\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# Open MAB then 1X Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xOpenAuth_MAB_1X\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using mab priority 20\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n  40 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate mab\n   20 terminate dot1x\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# CTS SGACL Enforcement #}\ncts role-based enforcement\n{% macro configure_cts(vlanpairs) %}\n  cts role-based enforcement vlan-list 1,{{ vlanpairs|join(',', attribute='vlan') }}\n{% endmacro %} \n!",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# IBNS configurations build #}\n!\n{# Classifications #}\nclass-map type control subscriber match-all AAA_SVR_DOWN_AUTHD_HOST\n match authorization-status authorized\n match result-type aaa-timeout\n!\nclass-map type control subscriber match-all AAA_SVR_DOWN_UNAUTHD_HOST\n match authorization-status unauthorized\n match result-type aaa-timeout\n!\nclass-map type control subscriber match-all AUTHC_SUCCESS-AUTHZ_FAIL\n match authorization-status unauthorized\n match result-type success\n!\nclass-map type control subscriber match-all DOT1X\n match method dot1x\n!\nclass-map type control subscriber match-all DOT1X_FAILED\n match method dot1x\n match result-type method dot1x authoritative\n!\nclass-map type control subscriber match-all DOT1X_MEDIUM_PRIO\n match authorizing-method-priority gt 20\n!\nclass-map type control subscriber match-all DOT1X_NO_RESP\n match method dot1x\n match result-type method dot1x agent-not-found\n!\nclass-map type control subscriber match-all DOT1X_TIMEOUT\n match method dot1x\n match result-type method dot1x method-timeout\n!\nclass-map type control subscriber match-any IN_CRITICAL_AUTH\n match activated-service-template DefaultCriticalVoice_SRV_TEMPLATE\n!\nclass-map type control subscriber match-any IN_CRITICAL_AUTH_CLOSED_MODE\n match activated-service-template DefaultCriticalAuthVlan_SRV_TEMPLATE\n match activated-service-template DefaultCriticalVoice_SRV_TEMPLATE\n!\nclass-map type control subscriber match-all MAB\n match method mab\n!\nclass-map type control subscriber match-all MAB_FAILED\n match method mab\n match result-type method mab authoritative\n!\nclass-map type control subscriber match-none NOT_IN_CRITICAL_AUTH\n match activated-service-template DefaultCriticalVoice_SRV_TEMPLATE\n!\nclass-map type control subscriber match-none NOT_IN_CRITICAL_AUTH_CLOSED_MODE\n match activated-service-template DefaultCriticalAuthVlan_SRV_TEMPLATE\n match activated-service-template DefaultCriticalVoice_SRV_TEMPLATE\n!\n{# Policy Maps #}\n{# CLOSED 1X then MAB Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xClosedAuth_1X_MAB\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using dot1x retries 2 retry-time 0 priority 10\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  40 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate dot1x\n   20 terminate mab\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH_CLOSED_MODE do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH_CLOSED_MODE do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# CLOSED MAB then 1X Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xClosedAuth_MAB_1X\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using mab priority 20\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n  40 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate mab\n   20 terminate dot1x\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH_CLOSED_MODE do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH_CLOSED_MODE do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# LOW IMPACT 1X then MAB Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xLowImpactAuth_1X_MAB\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using dot1x retries 2 retry-time 0 priority 10\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   25 activate service-template DefaultCriticalAccess_SRV_TEMPLATE\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  40 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate dot1x\n   20 terminate mab\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# LOW IMPACT MAB then 1X Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xLowImpactAuth_MAB_1X\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using mab priority 20\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   25 activate service-template DefaultCriticalAccess_SRV_TEMPLATE\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n  40 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate mab\n   20 terminate dot1x\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# Open 1X then MAB Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xOpenAuth_1X_MAB\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using dot1x retries 2 retry-time 0 priority 10\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  40 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate dot1x\n   20 terminate mab\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# Open MAB then 1X Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xOpenAuth_MAB_1X\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using mab priority 20\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n  40 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate mab\n   20 terminate dot1x\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# CTS SGACL Enforcement #}\ncts role-based enforcement\n{% macro configure_cts(vlanpairs) %}\n  cts role-based enforcement vlan-list 1,{{ vlanpairs|join(',', attribute='vlan') }}\n{% endmacro %} \n!",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1675030354464,
        "lastUpdateTime": 1675547617484,
        "latestVersionTime": 1675547623716,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "0a0c2026-f8c7-4af1-92d1-de3bda2ee00a",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "Interfaces-Macros",
        "description": "Interface Macros for Host facing ports. Includes Standard Macro set, AutoConf Templates and Macros set, and IBNS 2.0 Templates and Macros set.",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# General Interface Macro Section#}\n!\n{# Interface Access Macro #}\n{% macro access_interface(vlan_number) %}\n  switchport access vlan {{ vlan_number }}\n  switchport mode access\n  snmp trap mac-notification change added\n  snmp trap mac-notification change removed\n  spanning-tree portfast\n{% endmacro %}\n!\n{# Interface Access Point Macro for AP's #}\n{% macro accesspoint(vlan_number) %} \n   description Access Point Interface\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   spanning-tree portfast\n{% endmacro %}\n!\n{# Interface FLex-Access Point Macro for Flex AP's #}\n{% macro flexaccesspoint(vlan_number, data_number, voice_number, guest_number) %} \n   description Flex Access Point Interface\n   switchport mode trunk\n   switchport trunk native vlan {{ vlan_number }}\n   switchport trunk allowed vlan {{ vlan_number }},{{ data_number }},{{ voice_number}},{{ guest_number }}\n   spanning-tree portfast trunk\n{% endmacro %}\n!\n{# Interface Workstations with Voice Macro #}\n{% macro workstation_interface(vlan_number, voice_number) %}\n  description Workstation Interface\n  switchport access vlan {{ vlan_number }}\n  switchport voice vlan {{ voice_number }}\n  switchport mode access\n  snmp trap mac-notification change added\n  snmp trap mac-notification change removed\n  spanning-tree portfast\n{% endmacro %}\n\n{# --------------------------------------------------------------- #}\n\n{# AutoConf Macro Section #}\n{# AutoConf Base Configuration Macro #}\n{% macro baseconf_interface() %}\n     switchport mode access\n     snmp trap mac-notification change added\n     snmp trap mac-notification change removed\n     source template BASE\n{% endmacro %}\n!\n{# Interface Access Point Template to be used with Autoconf for AP's #}\n{% macro autoconf_accesspoint(vlan_number) %} \n  template ACCESS_POINT\n   description Access Point Interface\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   spanning-tree portfast\n{% endmacro %}\n!\n{# Interface FLex-Access Point Template to be used with Autoconf for Flex AP's #}\n{% macro autoconf_flexaccesspoint(vlan_number, data_number, voice_number, guest_number) %} \n  template FLEX_ACCESS_POINT\n   description Flex Access Point Interface\n   switchport mode trunk\n   switchport trunk native vlan {{ vlan_number }}\n   switchport trunk allowed vlan {{ vlan_number }},{{ data_number}},{{ voice_number}},{{ guest_number }}\n   spanning-tree portfast trunk\n{% endmacro %}\n!\n{# Interface Workstation Template to be used with Autoconf for AP's #}\n{% macro autoconf_workstation(vlan_number, voice_number) %} \n  template WORKSTATION\n   description Workstation Interface\n   switchport access vlan {{ vlan_number }}\n   switchport voice vlan {{ voice_number }}\n   switchport mode access\n   spanning-tree portfast\n{% endmacro %}\n!\n{# Interface Base Configuration Template to be used with Autoconf for baseconfig's #}\n{% macro autoconf_baseconfig(vlan_number) %} \n  template BASE\n   description Base Config\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   spanning-tree portfast\n{% endmacro %}\n\n{# --------------------------------------------------------------- #}\n\n{# IBNS2.0 Macro Section #}\n{# Interface Base Configuration IBNS2.0 Template Macro #}\n{% macro ibns_baseconf_interface() %}\n  description BASE CONFIG\n  switchport mode access\n  snmp trap mac-notification change added\n  snmp trap mac-notification change removed\n  spanning-tree portfast\n  spanning-tree bpduguard enable\n  source template BASE\n{% endmacro %}\n!\n{# Interface Access Point IBNS2.0 Template Macro #}\n{% macro ibns_accesspoint(vlan_number) %} \n  template ACCESS_POINT\n   description Access Point Interface\n   switchport access vlan {{ vlan_number }}\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   {#ip access-group ACL-DEFAULT in#}\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_MAB_1X\n{% endmacro %}\n!\n{# Interface FLex-Access Point IBNS2.0 Template Macro #}\n{% macro ibns_flexaccesspoint(vlan_number, data_number, voice_number, guest_number) %} \n  template FLEX_ACCESS_POINT\n   description Flex Access Point Interface\n   switchport mode trunk\n   switchport trunk native vlan {{ vlan_number }}\n   switchport trunk allowed vlan {{ vlan_number }},{{ data_number }},{{ voice_number}},{{ guest_number }}\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session interface-template sticky timer 30\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   {#ip access-group ACL-DEFAULT in#}\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_MAB_1X\n{% endmacro %}\n!\n{# Interface Workstation Access IBNS2.0 Template Macro #}\n{% macro ibns_workstation(vlan_number, voice_number) %} \n  template WORKSTATION\n   description Workstation\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   switchport voice vlan {{ voice_number }}\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session closed\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_1X_MAB\n{% endmacro %}\n!\n{# Interface Guest Access IBNS2.0 Template Macro #}\n{% macro ibns_guest(vlan_number) %} \n  template GUEST\n   description Guest Interface\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session closed\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_1X_MAB\n{% endmacro %}\n!\n{# Interface Base Configuration IBNS2.0 Template Macro #}\n{% macro ibns_baseconfig(vlan_number) %} \n  template BASE\n   description BASE CONFIG\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session closed\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_1X_MAB\n{% endmacro %}\n\n{# --------------------------------------------------------------- #}\n\n\n",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# General Interface Macro Section#}\n!\n{# Interface Access Macro #}\n{% macro access_interface(vlan_number) %}\n  switchport access vlan {{ vlan_number }}\n  switchport mode access\n  snmp trap mac-notification change added\n  snmp trap mac-notification change removed\n  spanning-tree portfast\n{% endmacro %}\n!\n{# Interface Access Point Macro for AP's #}\n{% macro accesspoint(vlan_number) %} \n   description Access Point Interface\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   spanning-tree portfast\n{% endmacro %}\n!\n{# Interface FLex-Access Point Macro for Flex AP's #}\n{% macro flexaccesspoint(vlan_number, data_number, voice_number, guest_number) %} \n   description Flex Access Point Interface\n   switchport mode trunk\n   switchport trunk native vlan {{ vlan_number }}\n   switchport trunk allowed vlan {{ vlan_number }},{{ data_number }},{{ voice_number}},{{ guest_number }}\n   spanning-tree portfast trunk\n{% endmacro %}\n!\n{# Interface Workstations with Voice Macro #}\n{% macro workstation_interface(vlan_number, voice_number) %}\n  description Workstation Interface\n  switchport access vlan {{ vlan_number }}\n  switchport voice vlan {{ voice_number }}\n  switchport mode access\n  snmp trap mac-notification change added\n  snmp trap mac-notification change removed\n  spanning-tree portfast\n{% endmacro %}\n\n{# --------------------------------------------------------------- #}\n\n{# AutoConf Macro Section #}\n{# AutoConf Base Configuration Macro #}\n{% macro baseconf_interface() %}\n     switchport mode access\n     snmp trap mac-notification change added\n     snmp trap mac-notification change removed\n     source template BASE\n{% endmacro %}\n!\n{# Interface Access Point Template to be used with Autoconf for AP's #}\n{% macro autoconf_accesspoint(vlan_number) %} \n  template ACCESS_POINT\n   description Access Point Interface\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   spanning-tree portfast\n{% endmacro %}\n!\n{# Interface FLex-Access Point Template to be used with Autoconf for Flex AP's #}\n{% macro autoconf_flexaccesspoint(vlan_number, data_number, voice_number, guest_number) %} \n  template FLEX_ACCESS_POINT\n   description Flex Access Point Interface\n   switchport mode trunk\n   switchport trunk native vlan {{ vlan_number }}\n   switchport trunk allowed vlan {{ vlan_number }},{{ data_number}},{{ voice_number}},{{ guest_number }}\n   spanning-tree portfast trunk\n{% endmacro %}\n!\n{# Interface Workstation Template to be used with Autoconf for AP's #}\n{% macro autoconf_workstation(vlan_number, voice_number) %} \n  template WORKSTATION\n   description Workstation Interface\n   switchport access vlan {{ vlan_number }}\n   switchport voice vlan {{ voice_number }}\n   switchport mode access\n   spanning-tree portfast\n{% endmacro %}\n!\n{# Interface Base Configuration Template to be used with Autoconf for baseconfig's #}\n{% macro autoconf_baseconfig(vlan_number) %} \n  template BASE\n   description Base Config\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   spanning-tree portfast\n{% endmacro %}\n\n{# --------------------------------------------------------------- #}\n\n{# IBNS2.0 Macro Section #}\n{# Interface Base Configuration IBNS2.0 Template Macro #}\n{% macro ibns_baseconf_interface() %}\n  description BASE CONFIG\n  switchport mode access\n  snmp trap mac-notification change added\n  snmp trap mac-notification change removed\n  spanning-tree portfast\n  spanning-tree bpduguard enable\n  source template BASE\n{% endmacro %}\n!\n{# Interface Access Point IBNS2.0 Template Macro #}\n{% macro ibns_accesspoint(vlan_number) %} \n  template ACCESS_POINT\n   description Access Point Interface\n   switchport access vlan {{ vlan_number }}\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   {#ip access-group ACL-DEFAULT in#}\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_MAB_1X\n{% endmacro %}\n!\n{# Interface FLex-Access Point IBNS2.0 Template Macro #}\n{% macro ibns_flexaccesspoint(vlan_number, data_number, voice_number, guest_number) %} \n  template FLEX_ACCESS_POINT\n   description Flex Access Point Interface\n   switchport mode trunk\n   switchport trunk native vlan {{ vlan_number }}\n   switchport trunk allowed vlan {{ vlan_number }},{{ data_number }},{{ voice_number}},{{ guest_number }}\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session interface-template sticky timer 30\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   {#ip access-group ACL-DEFAULT in#}\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_MAB_1X\n{% endmacro %}\n!\n{# Interface Workstation Access IBNS2.0 Template Macro #}\n{% macro ibns_workstation(vlan_number, voice_number) %} \n  template WORKSTATION\n   description Workstation\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   switchport voice vlan {{ voice_number }}\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session closed\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_1X_MAB\n{% endmacro %}\n!\n{# Interface Guest Access IBNS2.0 Template Macro #}\n{% macro ibns_guest(vlan_number) %} \n  template GUEST\n   description Guest Interface\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session closed\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_1X_MAB\n{% endmacro %}\n!\n{# Interface Base Configuration IBNS2.0 Template Macro #}\n{% macro ibns_baseconfig(vlan_number) %} \n  template BASE\n   description BASE CONFIG\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session closed\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_1X_MAB\n{% endmacro %}\n\n{# --------------------------------------------------------------- #}\n\n\n",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1674762318702,
        "lastUpdateTime": 1675547759677,
        "latestVersionTime": 1674762318702,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "174befa0-bcf7-4d00-870c-18de64e3a31e",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "Sensitive-Info",
        "description": "Sensitive information is Separated from Configurations for ease of management. This is programmed on the switch pragmatically from these objects.",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# Dictionaries of SNMP V2 Community Strings #}\n{% set snmpCommunityStrings = [\n  {'string':'EXAMPLE1'},\n  {'string':'EXAMPLE2'}\n  ]%}\n\n{# Dictionaries of User information #}\n{% set users = [\n  {'name':'kbaldwin','priv':'15','key':'$9$DwFGXgdsukL4qE$7LI.Kq6vijfo/BkM53McdTrlfS.ou4CmOQ6zYH8iba2'},\n  {'name':'plukasze','priv':'3','key':'$9$DwFGXgdsukL4qE$7LI.Kq6vijfo/BkM53McdTrlfS.ou4CmOQ6zYH8iba2'}\n  ]%}\n",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# Dictionaries of SNMP V2 Community Strings #}\n{% set snmpCommunityStrings = [\n  {'string':'EXAMPLE1'},\n  {'string':'EXAMPLE2'}\n  ]%}\n\n{# Dictionaries of User information #}\n{% set users = [\n  {'name':'kbaldwin','priv':'15','key':'$9$DwFGXgdsukL4qE$7LI.Kq6vijfo/BkM53McdTrlfS.ou4CmOQ6zYH8iba2'},\n  {'name':'plukasze','priv':'3','key':'$9$DwFGXgdsukL4qE$7LI.Kq6vijfo/BkM53McdTrlfS.ou4CmOQ6zYH8iba2'}\n  ]%}\n",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1674762318823,
        "lastUpdateTime": 1675548056908,
        "latestVersionTime": 1674762318823,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "ed52e56e-055a-40f3-84d2-91697a95298b",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "Interfaces-Standard-Configuration",
        "description": "Standard Configuration for VLANs and Host facing ports.",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# Interface Configurations #}\n{% include \"DNAC-Templates-Samples/Interfaces-Macros\" %}\n{% include \"DNAC-Templates-Samples/VLAN-Configuration\" %}\n!\n{% set vlanArray = [] %}\n{% if Site == \"A\" %}\n  {{ configure_vlans(SiteAvlans) }}\n  {{ search_vlans(SiteAvlans) }}\n{% elif Site == \"B\" %}\n  {{ configure_vlans(SiteBvlans) }}\n  {{ search_vlans(SiteBvlans) }}\n{% endif %}\n!\n{# Determine whether target is Dual or Single Uplink Target #}\n{% set uplink_portarray = [] %}\n{% for interface in __interface %}\n  {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n    {% do uplink_portarray.append(interface.portName) %}\n  {% endif %}\n{% endfor %}\n!\n{% if uplink_portarray | length == 2 %}\n  {{ configure_stp_dualuplink(vlanArray) }}\n{% elif uplink_portarray | length == 1 %}\n  {{ configure_stp_singleuplink(vlanArray) }}\n{% endif %}\n!\n{# Interface Interations #}\n!\n{# System Variable example interfaces in one logical code construct #}\n{# Select and Configure Access Point interfaces#}\n{% set apintlog = [] %}\n!\n{% for apinterface in accesspoint_interfaces %}\n  {% for interface in __interface %}\n    {% if interface.portName == apinterface %}\n      interface {{ interface.portName }}\n       {{ accesspoint(vlanArray[0]) }}\n      {% do apintlog.append(interface.portName) %}\n    {% endif %}\n  {% endfor %}\n{% endfor %}\n!\n{# Automatically Configure Workstation Remaining interfaces#}\n{% for interface in __interface %}\n  {% if interface.interfaceType == \"Physical\" && interface.portName.replaceAll(\"(^[a-zA-Z]+).*\",\"$1\") == \"GigabitEthernet\"  %}\n    {% if interface.portName.replaceAll(\"(^[a-zA-Z]+.).*\", \"$1\") != \"GigabitEthernet0\" %}\n      {% if interface.portName.replaceAll(\"^[a-zA-Z]+(\\\\d+)/(\\\\d+)/(\\\\d+)\", \"$2\") != 1 %}\n        {% if interface.portName in apintlog %}\n        {% else %}\n          interface {{ interface.portName }}\n            {{ workstation_interface(vlanArray[1], vlanArray[2]) }}\n        {% endif %}\n      {% endif %}\n    {% endif %}\n  {% endif %}\n{% endfor %}\n!\ninterface GigabitEthernet0/0\n no ip address\n shutdown\n!\n",
        "rollbackTemplateContent": "",
        "templateParams": [
          {
            "parameterName": "accesspoint_interfaces",
            "dataType": "STRING",
            "defaultValue": null,
            "description": "Select the ports where Access Points will be connected. All other interfaces will be configured with Host facing connectivity for Workstations and Phones",
            "required": true,
            "notParam": false,
            "paramArray": true,
            "instructionText": null,
            "group": null,
            "order": 3,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "{\"provider\":\"Inventory\",\"attributeToDisplay\":\"portName\",\"params\":[{\"type\":\"MANAGED_DEVICE_UUID\",\"scope\":\"RUNTIME\",\"value\":\"ff5570fe-dc7a-4a45-ab73-7551861a7959\"},{\"type\":\"MANAGED_DEVICE_IP\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_HOSTNAME\",\"scope\":\"RUNTIME\",\"value\":null}],\"value\":null,\"source\":\"Inventory\",\"entity\":\"Interface\",\"attribute\":\"portName\",\"filterType\":\"regex\",\"filterValue\":\"GigabitEthernet[1-9]/0/[1-9]+\",\"filterByAttribute\":\"portName\"}",
            "displayName": "Access Point Interfaces"
          },
          {
            "parameterName": "vlan_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 4,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": null
          },
          {
            "parameterName": "__interface",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": true,
            "instructionText": null,
            "group": null,
            "order": 2,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": null
          },
          {
            "parameterName": "Site",
            "dataType": "STRING",
            "defaultValue": null,
            "description": "The Letter denotes the VLAN Schema\n         AP, Data, Voice, Guest, Disabled\nA = 10,20,30,40,99\nB = 20,30,40,50,99",
            "required": true,
            "notParam": false,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": {
              "selectionType": "SINGLE_SELECT",
              "selectionValues": {
                "A": "A",
                "B": "B"
              },
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": "VLAN Schema for Site"
          }
        ],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# Interface Configurations #}\n{% include \"DNAC-Templates-Samples/Interfaces-Macros\" %}\n{% include \"DNAC-Templates-Samples/VLAN-Configuration\" %}\n!\n{% set vlanArray = [] %}\n{% if Site == \"A\" %}\n  {{ configure_vlans(SiteAvlans) }}\n  {{ search_vlans(SiteAvlans) }}\n{% elif Site == \"B\" %}\n  {{ configure_vlans(SiteBvlans) }}\n  {{ search_vlans(SiteBvlans) }}\n{% endif %}\n!\n{# Determine whether target is Dual or Single Uplink Target #}\n{% set uplink_portarray = [] %}\n{% for interface in __interface %}\n  {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n    {% do uplink_portarray.append(interface.portName) %}\n  {% endif %}\n{% endfor %}\n!\n{% if uplink_portarray | length == 2 %}\n  {{ configure_stp_dualuplink(vlanArray) }}\n{% elif uplink_portarray | length == 1 %}\n  {{ configure_stp_singleuplink(vlanArray) }}\n{% endif %}\n!\n{# Interface Interations #}\n!\n{# System Variable example interfaces in one logical code construct #}\n{# Select and Configure Access Point interfaces#}\n{% set apintlog = [] %}\n!\n{% for apinterface in accesspoint_interfaces %}\n  {% for interface in __interface %}\n    {% if interface.portName == apinterface %}\n      interface {{ interface.portName }}\n       {{ accesspoint(vlanArray[0]) }}\n      {% do apintlog.append(interface.portName) %}\n    {% endif %}\n  {% endfor %}\n{% endfor %}\n!\n{# Automatically Configure Workstation Remaining interfaces#}\n{% for interface in __interface %}\n  {% if interface.interfaceType == \"Physical\" && interface.portName.replaceAll(\"(^[a-zA-Z]+).*\",\"$1\") == \"GigabitEthernet\"  %}\n    {% if interface.portName.replaceAll(\"(^[a-zA-Z]+.).*\", \"$1\") != \"GigabitEthernet0\" %}\n      {% if interface.portName.replaceAll(\"^[a-zA-Z]+(\\\\d+)/(\\\\d+)/(\\\\d+)\", \"$2\") != 1 %}\n        {% if interface.portName in apintlog %}\n        {% else %}\n          interface {{ interface.portName }}\n            {{ workstation_interface(vlanArray[1], vlanArray[2]) }}\n        {% endif %}\n      {% endif %}\n    {% endif %}\n  {% endif %}\n{% endfor %}\n!\ninterface GigabitEthernet0/0\n no ip address\n shutdown\n!\n",
        "promotedTemplateParams": [
          {
            "parameterName": "__interface",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": true,
            "instructionText": null,
            "group": null,
            "order": 2,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": null
          },
          {
            "parameterName": "accesspoint_interfaces",
            "dataType": "STRING",
            "defaultValue": null,
            "description": "Select the ports where Access Points will be connected. All other interfaces will be configured with Host facing connectivity for Workstations and Phones",
            "required": true,
            "notParam": false,
            "paramArray": true,
            "instructionText": null,
            "group": null,
            "order": 3,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "{\"provider\":\"Inventory\",\"attributeToDisplay\":\"portName\",\"params\":[{\"type\":\"MANAGED_DEVICE_UUID\",\"scope\":\"RUNTIME\",\"value\":\"ff5570fe-dc7a-4a45-ab73-7551861a7959\"},{\"type\":\"MANAGED_DEVICE_IP\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_HOSTNAME\",\"scope\":\"RUNTIME\",\"value\":null}],\"value\":null,\"source\":\"Inventory\",\"entity\":\"Interface\",\"attribute\":\"portName\",\"filterType\":\"regex\",\"filterValue\":\"GigabitEthernet[1-9]/0/[1-9]+\",\"filterByAttribute\":\"portName\"}",
            "id": null,
            "displayName": "Access Point Interfaces"
          },
          {
            "parameterName": "Site",
            "dataType": "STRING",
            "defaultValue": null,
            "description": "The Letter denotes the VLAN Schema\n         AP, Data, Voice, Guest, Disabled\nA = 10,20,30,40,99\nB = 20,30,40,50,99",
            "required": true,
            "notParam": false,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": {
              "selectionType": "SINGLE_SELECT",
              "selectionValues": {
                "A": "A",
                "B": "B"
              },
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": "VLAN Schema for Site"
          },
          {
            "parameterName": "vlan_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 4,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": null
          }
        ],
        "customParamsOrder": false,
        "createTime": 1675089495213,
        "lastUpdateTime": 1675551465912,
        "latestVersionTime": 1675551473572,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "b27b9485-8076-4ed3-bc99-edad41e26942",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "ACL-Configuration",
        "description": "Configurations for ACLs - includes Objects, configuration examples for pragmatic approaches, and standard approaches",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# Dictionaries of VLANS per Site #}\n{% set MgmtAceEntries = [\n  {'entry':'10','rule':'permit','range':'10.10.0.100','mask':'0.0.0.0'},\n  {'entry':'20','rule':'permit','range':'10.10.0.200','mask':'0.0.0.0'},\n  {'entry':'30','rule':'permit','range':'10.10.0.0','mask':'0.0.0.255'},\n  {'entry':'40','rule':'permit','range':'10.20.0.0','mask':'0.0.0.255'}\n  ]%}\n{% set VtyAccessAceEntries = [\n  {'entry':'10','rule':'permit','range':'10.10.0.100','mask':'0.0.0.0'},\n  {'entry':'20','rule':'permit','range':'10.10.0.200','mask':'0.0.0.0'},\n  {'entry':'30','rule':'permit','range':'10.10.0.0','mask':'0.0.0.255'},\n  {'entry':'40','rule':'permit','range':'10.20.0.0','mask':'0.0.0.255'},\n  {'entry':'50','rule':'permit','range':'10.30.0.0','mask':'0.0.0.255'},\n  {'entry':'60','rule':'permit','range':'10.40.0.0','mask':'0.0.0.255'}\n  ]%}\n{% set AclDefaultEntries = [\n  {'entry':'10','rule':'permit','range':'10.10.0.100','mask':'0.0.0.0'},\n  {'entry':'20','rule':'permit','range':'10.10.0.200','mask':'0.0.0.0'},\n  {'entry':'30','rule':'permit','range':'10.10.0.0','mask':'0.0.0.255'}\n  ]%}\n\n{# ACLs Standard Macro - Pragmatically Build Standard ACL from Object #}\n{% macro StandardAcl(name,lists) %}\n  ip access-list standard {{ name }}\n  {% for list in lists %}\n    {{ list['entry'] }} {{ list['rule'] }} {{ list['range'] }} {{ list['mask'] }}\n  {% endfor %}\n{% endmacro %}\n\n{# ACLs Extended Macro - Pragmatically Build Extended ACL from Object #}\n{% macro ExtendedAcl(name,lists) %}\n  ip access-list extended {{ name}}\n  {% for list in lists %}\n    {{ list.entry }} {{ list.rule }} {{ list.srange }} {{ list.smask }} {{ list.sport }} {{ list.drange }} {{ list.dmask }} {{ list.dport }}\n  {% endfor %}\n{% endmacro %}\n\n{# SNMP ACL #}\n{% macro StandardSnmpLineAcl() %}\n access-list 10 permit 10.10.0.100\n access-list 10 permit 10.20.0.200\n access-list 10 permit 10.10.0.0 0.0.0.255\n access-list 10 permit 10.20.0.0 0.0.0.255\n{% endmacro %}\n!\n{# SNMP ACL - Named ACL #}\n{% macro StandardSnmpAcl() %}\nip access-list standard SNMP\n 10 permit 10.10.0.100\n 20 permit 10.20.0.200\n 30 permit 10.10.0.0 0.0.0.255\n 40 permit 10.20.0.0 0.0.0.255\n{% endmacro %}\n!\n{# VTY ACL #}\n{% macro StandardVtyLineAcl() %}\n access-list 20 permit 10.10.0.100\n access-list 20 permit 10.20.0.200\n access-list 20 permit 10.10.0.0 0.0.0.255\n access-list 20 permit 10.20.0.0 0.0.0.255\n{% endmacro %}\n!\n{# VTY ACL - Named ACL #}\n{% macro StandardVtyAcl() %}\nip access-list standard VTY\n 10 permit 10.10.0.100\n 20 permit 10.20.0.200\n 30 permit 10.10.0.0 0.0.0.255\n 40 permit 10.20.0.0 0.0.0.255\n{% endmacro %}\n!\n{# The below example uses the macros above #}\n{{ StandardSnmpLineAcl() }}\n{{ StandardSnmpAcl() }}\n{{ StandardVtyLineAcl() }}\n{{ StandardVtyAcl() }}\n\n{# The below example uses the objects above and macros - Example in comments below #}\n{# ip access-list standard ACL-DEFAULT #}\n{#  10 permit any #}\n{{ StandardAcl(\"ACL-DEFAULT\",AclDefaultEntries) }}\n",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# Dictionaries of VLANS per Site #}\n{% set MgmtAceEntries = [\n  {'entry':'10','rule':'permit','range':'10.10.0.100','mask':'0.0.0.0'},\n  {'entry':'20','rule':'permit','range':'10.10.0.200','mask':'0.0.0.0'},\n  {'entry':'30','rule':'permit','range':'10.10.0.0','mask':'0.0.0.255'},\n  {'entry':'40','rule':'permit','range':'10.20.0.0','mask':'0.0.0.255'}\n  ]%}\n{% set VtyAccessAceEntries = [\n  {'entry':'10','rule':'permit','range':'10.10.0.100','mask':'0.0.0.0'},\n  {'entry':'20','rule':'permit','range':'10.10.0.200','mask':'0.0.0.0'},\n  {'entry':'30','rule':'permit','range':'10.10.0.0','mask':'0.0.0.255'},\n  {'entry':'40','rule':'permit','range':'10.20.0.0','mask':'0.0.0.255'},\n  {'entry':'50','rule':'permit','range':'10.30.0.0','mask':'0.0.0.255'},\n  {'entry':'60','rule':'permit','range':'10.40.0.0','mask':'0.0.0.255'}\n  ]%}\n{% set AclDefaultEntries = [\n  {'entry':'10','rule':'permit','range':'10.10.0.100','mask':'0.0.0.0'},\n  {'entry':'20','rule':'permit','range':'10.10.0.200','mask':'0.0.0.0'},\n  {'entry':'30','rule':'permit','range':'10.10.0.0','mask':'0.0.0.255'}\n  ]%}\n\n{# ACLs Standard Macro - Pragmatically Build Standard ACL from Object #}\n{% macro StandardAcl(name,lists) %}\n  ip access-list standard {{ name }}\n  {% for list in lists %}\n    {{ list['entry'] }} {{ list['rule'] }} {{ list['range'] }} {{ list['mask'] }}\n  {% endfor %}\n{% endmacro %}\n\n{# ACLs Extended Macro - Pragmatically Build Extended ACL from Object #}\n{% macro ExtendedAcl(name,lists) %}\n  ip access-list extended {{ name}}\n  {% for list in lists %}\n    {{ list.entry }} {{ list.rule }} {{ list.srange }} {{ list.smask }} {{ list.sport }} {{ list.drange }} {{ list.dmask }} {{ list.dport }}\n  {% endfor %}\n{% endmacro %}\n\n{# SNMP ACL #}\n{% macro StandardSnmpLineAcl() %}\n access-list 10 permit 10.10.0.100\n access-list 10 permit 10.20.0.200\n access-list 10 permit 10.10.0.0 0.0.0.255\n access-list 10 permit 10.20.0.0 0.0.0.255\n{% endmacro %}\n!\n{# SNMP ACL - Named ACL #}\n{% macro StandardSnmpAcl() %}\nip access-list standard SNMP\n 10 permit 10.10.0.100\n 20 permit 10.20.0.200\n 30 permit 10.10.0.0 0.0.0.255\n 40 permit 10.20.0.0 0.0.0.255\n{% endmacro %}\n!\n{# VTY ACL #}\n{% macro StandardVtyLineAcl() %}\n access-list 20 permit 10.10.0.100\n access-list 20 permit 10.20.0.200\n access-list 20 permit 10.10.0.0 0.0.0.255\n access-list 20 permit 10.20.0.0 0.0.0.255\n{% endmacro %}\n!\n{# VTY ACL - Named ACL #}\n{% macro StandardVtyAcl() %}\nip access-list standard VTY\n 10 permit 10.10.0.100\n 20 permit 10.20.0.200\n 30 permit 10.10.0.0 0.0.0.255\n 40 permit 10.20.0.0 0.0.0.255\n{% endmacro %}\n!\n{# The below example uses the macros above #}\n{{ StandardSnmpLineAcl() }}\n{{ StandardSnmpAcl() }}\n{{ StandardVtyLineAcl() }}\n{{ StandardVtyAcl() }}\n\n{# The below example uses the objects above and macros - Example in comments below #}\n{# ip access-list standard ACL-DEFAULT #}\n{#  10 permit any #}\n{{ StandardAcl(\"ACL-DEFAULT\",AclDefaultEntries) }}\n",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1674762318782,
        "lastUpdateTime": 1675550118964,
        "latestVersionTime": 1674762318782,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "92449c24-cd1e-4ee7-9a57-a025ab5a6393",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "Interfaces-examples",
        "description": "How to configure interface examples.",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# Interface Configurations #}\n{% include \"DNAC-Templates-Samples/Interfaces-Macros\" %}\n!\n{# Interface Interations #}\n!\n{# System Variable example interfaces in one logical code construct #}\n{% for interface in __interface %}\n  {% if interface.portMode == \"access\" && interface.interfaceType == \"Physical\" %}\n     interface {{ interface.portName }}\n       {{ access_interface(avlan) }}\n  {% endif %}\n{% endfor %}\n!\n{# Binding example interfaces in one logical code construct #}\n{% for interface in bindinterfaces %}\n  interface {{ interface.portname }}\n    {{ security_interface(svlan) }}\n{% endfor %}\n!\n{# Range example interfaces in one logical code construct #}\ninterface range 1/0/1-24\n    {{ workstation_interface(wvlan,vvlan) }}\n",
        "rollbackTemplateContent": "",
        "templateParams": [
          {
            "parameterName": "__interface",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": true,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": null
          },
          {
            "parameterName": "avlan",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 2,
            "customOrder": 0,
            "selection": null,
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": null
          },
          {
            "parameterName": "vvlan",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 5,
            "customOrder": 0,
            "selection": null,
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": null
          },
          {
            "parameterName": "bindinterfaces",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": true,
            "instructionText": null,
            "group": null,
            "order": 3,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "{\"provider\":\"Inventory\",\"attributeToDisplay\":\"portName\",\"params\":[{\"type\":\"MANAGED_DEVICE_UUID\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_IP\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_HOSTNAME\",\"scope\":\"RUNTIME\",\"value\":null}],\"value\":null,\"source\":\"Inventory\",\"entity\":\"Interface\",\"attribute\":null,\"filterType\":\"\",\"filterValue\":\"\",\"filterByAttribute\":\"\"}",
            "displayName": null
          },
          {
            "parameterName": "wvlan",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 4,
            "customOrder": 0,
            "selection": null,
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": null
          }
        ],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# Interface Configurations #}\n{% include \"DNAC-Templates-Samples/Interfaces-Macros\" %}\n!\n{# Interface Interations #}\n!\n{# System Variable example interfaces in one logical code construct #}\n{% for interface in __interface %}\n  {% if interface.portMode == \"access\" && interface.interfaceType == \"Physical\" %}\n     interface {{ interface.portName }}\n       {{ access_interface(avlan) }}\n  {% endif %}\n{% endfor %}\n!\n{# Binding example interfaces in one logical code construct #}\n{% for interface in bindinterfaces %}\n  interface {{ interface.portname }}\n    {{ security_interface(svlan) }}\n{% endfor %}\n!\n{# Range example interfaces in one logical code construct #}\ninterface range 1/0/1-24\n    {{ workstation_interface(wvlan,vvlan) }}\n",
        "promotedTemplateParams": [
          {
            "parameterName": "__interface",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": true,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": null
          },
          {
            "parameterName": "wvlan",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 4,
            "customOrder": 0,
            "selection": null,
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": null
          },
          {
            "parameterName": "bindinterfaces",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": true,
            "instructionText": null,
            "group": null,
            "order": 3,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "{\"provider\":\"Inventory\",\"attributeToDisplay\":\"portName\",\"params\":[{\"type\":\"MANAGED_DEVICE_UUID\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_IP\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_HOSTNAME\",\"scope\":\"RUNTIME\",\"value\":null}],\"value\":null,\"source\":\"Inventory\",\"entity\":\"Interface\",\"attribute\":null,\"filterType\":\"\",\"filterValue\":\"\",\"filterByAttribute\":\"\"}",
            "id": null,
            "displayName": null
          },
          {
            "parameterName": "vvlan",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 5,
            "customOrder": 0,
            "selection": null,
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": null
          },
          {
            "parameterName": "avlan",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 2,
            "customOrder": 0,
            "selection": null,
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": null
          }
        ],
        "customParamsOrder": false,
        "createTime": 1674762318862,
        "lastUpdateTime": 1675547861362,
        "latestVersionTime": 1674762318862,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "20c0bc65-3fff-4492-84db-01503a39c4d2",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "AutoConf-Configuration",
        "description": "AutoConf Configuration to enable AutoConf on Target and add parameter map for templates. Please note must be after interface templates are added to Target.",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# AutoConf Configurations #}\n!\n{# Enabling Autoconf on switch with interactive command #}\n#INTERACTIVE\nautoconf enable<IQ>yes<R>y\n#END_INTERACTIVE \n!\n{# Augmenting existing hidden parameter map with modifications #}\nparameter-map type subscriber attribute-to-service BUILTIN_DEVICE_TO_TEMPLATE\n 10 map device-type regex \"Cisco-IP-Phone\"\n  20 interface-template WORKSTATION\n 20 map device-type regex \"Cisco-IP-Camera\"\n  20 interface-template ACCESS_POINT\n 60 map device-type regex \"Cisco-AIR-AP\"\n  20 interface-template ACCESS_POINT\n 70 map device-type regex \"Cisco-AIR-LAP\"\n  20 interface-template ACCESS_POINT\n 110 map device-type regex \"Cisco-CAT-LAP\"\n  10 interface-template ACCESS_POINT\n 120 map oui eq \"00.24.9b\"\n  10 interface-template WORKSTATION \n!\n",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# AutoConf Configurations #}\n!\n{# Enabling Autoconf on switch with interactive command #}\n#INTERACTIVE\nautoconf enable<IQ>yes<R>y\n#END_INTERACTIVE \n!\n{# Augmenting existing hidden parameter map with modifications #}\nparameter-map type subscriber attribute-to-service BUILTIN_DEVICE_TO_TEMPLATE\n 10 map device-type regex \"Cisco-IP-Phone\"\n  20 interface-template WORKSTATION\n 20 map device-type regex \"Cisco-IP-Camera\"\n  20 interface-template ACCESS_POINT\n 60 map device-type regex \"Cisco-AIR-AP\"\n  20 interface-template ACCESS_POINT\n 70 map device-type regex \"Cisco-AIR-LAP\"\n  20 interface-template ACCESS_POINT\n 110 map device-type regex \"Cisco-CAT-LAP\"\n  10 interface-template ACCESS_POINT\n 120 map oui eq \"00.24.9b\"\n  10 interface-template WORKSTATION \n!\n",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1674762318963,
        "lastUpdateTime": 1675550134528,
        "latestVersionTime": 1674762318963,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "00c79935-7a03-4d71-b3ef-cf58412bb44e",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "VLAN-Configuration",
        "description": "VLAN Configurations that are required on Target. Various use cases, uplinks with or without port channels, spanning-tree",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# Dictionaries of VLANS per Site #}\n{% set SiteAvlans = [\n  {'vlan':'10','name':'apvlan'},\n  {'vlan':'20','name':'datavlan'},\n  {'vlan':'30','name':'voicevlan'},\n  {'vlan':'40','name':'guestvlan'},\n  {'vlan':'99','name':'disabledvlan'}\n  ]%}\n{% set SiteBvlans = [\n  {'vlan':'20','name':'apvlan'},\n  {'vlan':'30','name':'datavlan'},\n  {'vlan':'40','name':'voicevlan'},\n  {'vlan':'50','name':'guestvlan'},\n  {'vlan':'99','name':'disabledvlan'}\n  ]%}\n!\n{# MACRO VLAN DB Dependencies #}\n{% macro configure_vlans(vlanpairs)  %}\n  {% for vlanpair in vlanpairs %}\n    vlan {{ vlanpair['vlan'] }}\n    name {{ vlanpair['name'] }}\n  {% endfor %}\n{% endmacro %}\n!\n{# MACRO STP with PC Dependencies #}\n{% macro configure_stp_dualuplink(vlanpairs) %}\n  {% for interface in __interface %}\n    {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n      interface {{ interface.portName }}\n        access-session inherit disable autoconf \n    {% elif 'Port-channel' in interface.portName  %}\n      interface {{ interface.portName }} \n        switchport trunk allowed vlan add {{ vlanpairs|join(',') }}\n    {% endif %}\n  {% endfor %}\n{% endmacro %} \n!\n{# MACRO STP Dependencies #}\n{# This is an example of the configure_stp macro for a single uplink. As the ports are   #}\n{# showing prior to the portchannels it needs two logical constructs and as sort doesn't #}\n{# work. #}\n{% macro configure_stp_singleuplink(vlanpairs) %}\n  {% for interface in __interface %}\n    {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n      interface {{ interface.portName }}\n        switchport trunk allowed vlan add {{ vlanpairs|join(',') }}\n        access-session inherit disable autoconf \n    {% endif %}\n  {% endfor %}\n{% endmacro %} \n!\n{# MACRO Vlan Search Function #}\n{% macro search_vlans(vlanpairs) %}\n  {#{% set vlanArray = [] %}#}\n  {% for vlanpair in vlanpairs %}\n    {% if vlanpair['name'] == \"apvlan\" %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% elif vlanpair['name'] == \"datavlan\"%}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% elif \"voice\" in vlanpair['name'] %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% elif \"guest\" in vlanpair['name'] %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% elif \"disabled\" in vlanpair['name'] %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% else %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}\n!\n",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# Dictionaries of VLANS per Site #}\n{% set SiteAvlans = [\n  {'vlan':'10','name':'apvlan'},\n  {'vlan':'20','name':'datavlan'},\n  {'vlan':'30','name':'voicevlan'},\n  {'vlan':'40','name':'guestvlan'},\n  {'vlan':'99','name':'disabledvlan'}\n  ]%}\n{% set SiteBvlans = [\n  {'vlan':'20','name':'apvlan'},\n  {'vlan':'30','name':'datavlan'},\n  {'vlan':'40','name':'voicevlan'},\n  {'vlan':'50','name':'guestvlan'},\n  {'vlan':'99','name':'disabledvlan'}\n  ]%}\n!\n{# MACRO VLAN DB Dependencies #}\n{% macro configure_vlans(vlanpairs)  %}\n  {% for vlanpair in vlanpairs %}\n    vlan {{ vlanpair['vlan'] }}\n    name {{ vlanpair['name'] }}\n  {% endfor %}\n{% endmacro %}\n!\n{# MACRO STP with PC Dependencies #}\n{% macro configure_stp_dualuplink(vlanpairs) %}\n  {% for interface in __interface %}\n    {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n      interface {{ interface.portName }}\n        access-session inherit disable autoconf \n    {% elif 'Port-channel' in interface.portName  %}\n      interface {{ interface.portName }} \n        switchport trunk allowed vlan add {{ vlanpairs|join(',') }}\n    {% endif %}\n  {% endfor %}\n{% endmacro %} \n!\n{# MACRO STP Dependencies #}\n{# This is an example of the configure_stp macro for a single uplink. As the ports are   #}\n{# showing prior to the portchannels it needs two logical constructs and as sort doesn't #}\n{# work. #}\n{% macro configure_stp_singleuplink(vlanpairs) %}\n  {% for interface in __interface %}\n    {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n      interface {{ interface.portName }}\n        switchport trunk allowed vlan add {{ vlanpairs|join(',') }}\n        access-session inherit disable autoconf \n    {% endif %}\n  {% endfor %}\n{% endmacro %} \n!\n{# MACRO Vlan Search Function #}\n{% macro search_vlans(vlanpairs) %}\n  {#{% set vlanArray = [] %}#}\n  {% for vlanpair in vlanpairs %}\n    {% if vlanpair['name'] == \"apvlan\" %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% elif vlanpair['name'] == \"datavlan\"%}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% elif \"voice\" in vlanpair['name'] %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% elif \"guest\" in vlanpair['name'] %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% elif \"disabled\" in vlanpair['name'] %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% else %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}\n!\n",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1674762318565,
        "lastUpdateTime": 1675549890168,
        "latestVersionTime": 1674762318565,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "7691ea77-e223-454a-8a33-4611d5d2b9df",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "AAA-nonPXgrid-Configuration",
        "description": "AAA configuration is to be applied if UI Settings are not to be used. Designed to be utilized as an extension file.",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          },
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9200 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{% extends \"DNAC-Templates-Samples/Security-AAA-Modifications\" %}\n!\n{% block aaa-configuration %}\n{#- aaa configuration if required -#}\n!\nauthentication convert-to new-style\naaa new-model\naaa session-id common\n!\n{% endblock %}\n!\n{% block radius-configuration %}\n{#- RADIUS configuration if required -#}\n!\n{#- Radius Server configuration #}\naaa group server radius dnac-client-radius-group\n server name dnac-radius_{{ AaaIpAddress }}\n ip radius source-interface {{ MgmtVlan }}\n exit\n!\naaa server radius dynamic-author\n client {{ AaaIpAddress }} server-key {{ AaaRadiusSecret }} \n exit\n!\n{#- AAA Radius configuration #}\naaa accounting identity default start-stop group dnac-client-radius-group\naaa accounting update newinfo periodic 2880\naaa authorization network default group dnac-client-radius-group\naaa authorization network dnac-cts-list group dnac-client-radius-group\naaa authorization exec default local\naaa authentication login default local\naaa authentication dot1x default group dnac-client-radius-group\naaa authentication login dnac-cts-list group dnac-client-radius-group local\n!\n{#- Radius configuration #}\nradius server dnac-radius_{{ AaaIpAddress }}\n address ipv4 {{ AaaIpAddress }} auth-port 1812 acct-port 1813\n pac key {{ AaaCtsPacKey }} \n retransmit 3\n timeout 4\n automate-tester username dummy ignore-acct-port probe-on\n exit\n!\nradius-server vsa send authentication\nradius-server vsa send accounting\nradius-server dead-criteria time 5 tries 3\nradius-server deadtime 3\nradius-server attribute 31 send nas-port-detail mac-only\nradius-server attribute 31 mac format ietf upper-case\nradius-server attribute 8 include-in-access-req\nradius-server attribute 25 access-request include\nradius-server attribute 6 on-for-login-auth\nradius-server attribute 6 support-multiple\n!\n{#- Radius source interfaces configuration #}\nip radius source-interface {{ MgmtVlan }}\n!\ndot1x system-auth-control\ncts authorization list dnac-cts-list\n!\n{#- Radius Dot1x WWW for Guest configuration #}\nip http server\nip http max-connections 16\nip http secure-server\n!\nip access-list extended ACL_WEBAUTH_REDIRECT\n 40 deny ip any host {{ AaaIpAddress }}\n 500 permit tcp any any eq www\n 600 permit tcp any any eq 443\n 700 permit tcp any any eq 8443\n 800 deny udp any any eq domain\n 900 deny udp any eq bootpc any eq bootps\n exit\n!\nip domain lookup source-interface {{ MgmtVlan }}\n!\n{% endblock %}\n!\n{% block tacacs-configuration %}\n{#- TACACS Server configuration #}\ntacacs server dnac-tacacs_{{ AaaIpAddress }}\n address ipv4 {{ AaaIpAddress }}\n key {{ AaaTacacsSecret }} \n timeout 4\n exit\n!\naaa group server tacacs+ dnac-network-tacacs-group\n server name dnac-tacacs_{{ AaaIpAddress }}\n exit\n!\naaa accounting exec default start-stop group dnac-network-tacacs-group\naaa authorization exec VTY_author group dnac-network-tacacs-group local if-authenticated\naaa authentication login VTY_authen group dnac-network-tacacs-group local\n!\n{#- source interfaces configuration #}\nip tacacs source-interface {{ MgmtVlan }}\n!\n{#- Console & VTY configuration #}\nline con 0\n exec-timeout 15 0\n login authentication VTY_authen\n logging synchronous\n authorization exec VTY_author\n!\nline vty 0 15\n access-class 12 in\n exec-timeout 15 0\n login authentication VTY_authen\n logging synchronous\n authorization exec VTY_author\n transport input ssh\n{% endblock %}\n",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{% extends \"DNAC-Templates-Samples/Security-AAA-Modifications\" %}\n!\n{% block aaa-configuration %}\n{#- aaa configuration if required -#}\n!\nauthentication convert-to new-style\naaa new-model\naaa session-id common\n!\n{% endblock %}\n!\n{% block radius-configuration %}\n{#- RADIUS configuration if required -#}\n!\n{#- Radius Server configuration #}\naaa group server radius dnac-client-radius-group\n server name dnac-radius_{{ AaaIpAddress }}\n ip radius source-interface {{ MgmtVlan }}\n exit\n!\naaa server radius dynamic-author\n client {{ AaaIpAddress }} server-key {{ AaaRadiusSecret }} \n exit\n!\n{#- AAA Radius configuration #}\naaa accounting identity default start-stop group dnac-client-radius-group\naaa accounting update newinfo periodic 2880\naaa authorization network default group dnac-client-radius-group\naaa authorization network dnac-cts-list group dnac-client-radius-group\naaa authorization exec default local\naaa authentication login default local\naaa authentication dot1x default group dnac-client-radius-group\naaa authentication login dnac-cts-list group dnac-client-radius-group local\n!\n{#- Radius configuration #}\nradius server dnac-radius_{{ AaaIpAddress }}\n address ipv4 {{ AaaIpAddress }} auth-port 1812 acct-port 1813\n pac key {{ AaaCtsPacKey }} \n retransmit 3\n timeout 4\n automate-tester username dummy ignore-acct-port probe-on\n exit\n!\nradius-server vsa send authentication\nradius-server vsa send accounting\nradius-server dead-criteria time 5 tries 3\nradius-server deadtime 3\nradius-server attribute 31 send nas-port-detail mac-only\nradius-server attribute 31 mac format ietf upper-case\nradius-server attribute 8 include-in-access-req\nradius-server attribute 25 access-request include\nradius-server attribute 6 on-for-login-auth\nradius-server attribute 6 support-multiple\n!\n{#- Radius source interfaces configuration #}\nip radius source-interface {{ MgmtVlan }}\n!\ndot1x system-auth-control\ncts authorization list dnac-cts-list\n!\n{#- Radius Dot1x WWW for Guest configuration #}\nip http server\nip http max-connections 16\nip http secure-server\n!\nip access-list extended ACL_WEBAUTH_REDIRECT\n 40 deny ip any host {{ AaaIpAddress }}\n 500 permit tcp any any eq www\n 600 permit tcp any any eq 443\n 700 permit tcp any any eq 8443\n 800 deny udp any any eq domain\n 900 deny udp any eq bootpc any eq bootps\n exit\n!\nip domain lookup source-interface {{ MgmtVlan }}\n!\n{% endblock %}\n!\n{% block tacacs-configuration %}\n{#- TACACS Server configuration #}\ntacacs server dnac-tacacs_{{ AaaIpAddress }}\n address ipv4 {{ AaaIpAddress }}\n key {{ AaaTacacsSecret }} \n timeout 4\n exit\n!\naaa group server tacacs+ dnac-network-tacacs-group\n server name dnac-tacacs_{{ AaaIpAddress }}\n exit\n!\naaa accounting exec default start-stop group dnac-network-tacacs-group\naaa authorization exec VTY_author group dnac-network-tacacs-group local if-authenticated\naaa authentication login VTY_authen group dnac-network-tacacs-group local\n!\n{#- source interfaces configuration #}\nip tacacs source-interface {{ MgmtVlan }}\n!\n{#- Console & VTY configuration #}\nline con 0\n exec-timeout 15 0\n login authentication VTY_authen\n logging synchronous\n authorization exec VTY_author\n!\nline vty 0 15\n access-class 12 in\n exec-timeout 15 0\n login authentication VTY_authen\n logging synchronous\n authorization exec VTY_author\n transport input ssh\n{% endblock %}\n",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1675183238353,
        "lastUpdateTime": 1675552397329,
        "latestVersionTime": 1675552404480,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "8de648bf-55a7-42ef-9eb8-38f0aef0833f",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "Security-AAA-Configuration",
        "description": "Extraneous AAA Configurations ",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# Additional AAA commands not added by DNA Center Automation #}\n{# aaa authorization config-commands #}\n{# aaa authorization commands 0 default group tacacs+ local  #}\n{# aaa authorization commands 1 default group tacacs+ local  #}\n{# aaa authorization commands 15 default group tacacs+ local  #}\n!\n{# Default Parameters #}\n{# ip arp entry learn 10240 #}\nip domain retry 1\nip domain timeout 5\nlogin on-success log\nip forward-protocol nd\nno ip http server\nno ip http authentication local\nno ip http secure-server\nip ssh version 2\n!\n{# Banner Configuration #}\n<MLTCMD>\nbanner login ^\n ******************************************************************\n * CISCO SYSTEMS EXAMPLE                                          *\n ******************************************************************\n *                                                                *\n * THIS DEVICE IS PART OF A DEMONSTRATION COMPUTER NETWORK AND IS *\n * PROVIDED FOR OFFICIAL USE BY AUTHORIZED USERS ONLY. ANY        *\n * INFORMATION, DOCUMENTS, OR MATERIALS IN THE NETWORK ARE THE    *\n * PROPERTY OF THIS FIRM. UNAUTHORIZED USE, DUPLICATION, OR       *\n * DISCLOSURE OF INFORMATION OR SYSTEMS IN THIS NETWORK IS        *\n * STRICTLY PROHIBITED BY FEDERAL LAW (18 USC 10130). USE OF THIS *\n * NETWORK CONSTITUTES CONSENT TO MONITORING WHICH MAY BE         *\n * RELEASED TO FIRM MANAGEMENT AND/OR LAW ENFORCEMENT AGENCIES    *\n * AND MAY RESULT IN DISCIPLINARY ACTION, CIVIL ACTION, AND/OR    *\n * CRIMINAL OR CIVIL LITIGATION.                                  *\n *                                                                *\n ******************************************************************\n   Hostname: $(hostname)\n ******************************************************************\n * CISCO SYSTEMS EXAMPLE *\n ******************************************************************\n ^\n</MLTCMD>\n!\nnetconf-yang\n!\n{# VTY and Console Line Modifications #}\nline con 0\n exec-timeout 0 0\n logging synchronous\n stopbits 1\nline vty 0 15\n {# access-class 20 in #}\n exec-timeout 30 0\n {# timeout login response 300 #}\n {# transport input ssh #}\n",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# Additional AAA commands not added by DNA Center Automation #}\n{# aaa authorization config-commands #}\n{# aaa authorization commands 0 default group tacacs+ local  #}\n{# aaa authorization commands 1 default group tacacs+ local  #}\n{# aaa authorization commands 15 default group tacacs+ local  #}\n!\n{# Default Parameters #}\n{# ip arp entry learn 10240 #}\nip domain retry 1\nip domain timeout 5\nlogin on-success log\nip forward-protocol nd\nno ip http server\nno ip http authentication local\nno ip http secure-server\nip ssh version 2\n!\n{# Banner Configuration #}\n<MLTCMD>\nbanner login ^\n ******************************************************************\n * CISCO SYSTEMS EXAMPLE                                          *\n ******************************************************************\n *                                                                *\n * THIS DEVICE IS PART OF A DEMONSTRATION COMPUTER NETWORK AND IS *\n * PROVIDED FOR OFFICIAL USE BY AUTHORIZED USERS ONLY. ANY        *\n * INFORMATION, DOCUMENTS, OR MATERIALS IN THE NETWORK ARE THE    *\n * PROPERTY OF THIS FIRM. UNAUTHORIZED USE, DUPLICATION, OR       *\n * DISCLOSURE OF INFORMATION OR SYSTEMS IN THIS NETWORK IS        *\n * STRICTLY PROHIBITED BY FEDERAL LAW (18 USC 10130). USE OF THIS *\n * NETWORK CONSTITUTES CONSENT TO MONITORING WHICH MAY BE         *\n * RELEASED TO FIRM MANAGEMENT AND/OR LAW ENFORCEMENT AGENCIES    *\n * AND MAY RESULT IN DISCIPLINARY ACTION, CIVIL ACTION, AND/OR    *\n * CRIMINAL OR CIVIL LITIGATION.                                  *\n *                                                                *\n ******************************************************************\n   Hostname: $(hostname)\n ******************************************************************\n * CISCO SYSTEMS EXAMPLE *\n ******************************************************************\n ^\n</MLTCMD>\n!\nnetconf-yang\n!\n{# VTY and Console Line Modifications #}\nline con 0\n exec-timeout 0 0\n logging synchronous\n stopbits 1\nline vty 0 15\n {# access-class 20 in #}\n exec-timeout 30 0\n {# timeout login response 300 #}\n {# transport input ssh #}\n",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1674762318519,
        "lastUpdateTime": 1675550399797,
        "latestVersionTime": 1674762318519,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "2726ce72-921a-47ab-bcca-8cd519cfb749",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "Interfaces-Autoconf-Configuration",
        "description": "AutoConf Configuration for VLANs and Host facing ports.",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# Interface Configurations #}\n{% include \"DNAC-Templates-Samples/Interfaces-Macros\" %}\n{% include \"DNAC-Templates-Samples/VLAN-Configuration\" %}\n!\n{% set vlanArray = [] %}\n{% if Site == \"A\" %}\n  {{ configure_vlans(SiteAvlans) }}\n  {{ search_vlans(SiteAvlans) }}\n{% elif Site == \"B\" %}\n  {{ configure_vlans(SiteBvlans) }}\n  {{ search_vlans(SiteBvlans) }}\n{% endif %}\n!\n{# Determine whether target is Dual or Single Uplink Target #}\n{% set uplink_portarray = [] %}\n{% for interface in __interface %}\n  {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n    {% do uplink_portarray.append(interface.portName) %}\n  {% endif %}\n{% endfor %}\n!\n{% if uplink_portarray | length == 2 %}\n  {{ configure_stp_dualuplink(vlanArray) }}\n{% elif uplink_portarray | length == 1 %}\n  {{ configure_stp_singleuplink(vlanArray) }}\n{% endif %}\n!\n{{ autoconf_accesspoint(vlanArray[0]) }}\n{{ autoconf_workstation(vlanArray[1], vlanArray[2]) }}\n{{ autoconf_baseconfig(vlanArray[1]) }}\n!\n{% include \"DNAC-Templates-Samples/AutoConf-Configuration\" %}\n!\n{# Interface Interations #}\n!\n{# System Variable example interfaces in one logical code construct #}\n{% for interface in __interface %}\n  {% if interface.interfaceType == \"Physical\" && interface.portName.replaceAll(\"(^[a-zA-Z]+).*\",\"$1\") == \"GigabitEthernet\"  %}\n    {% if interface.portName.replaceAll(\"(^[a-zA-Z]+.).*\", \"$1\") != \"GigabitEthernet0\" %}\n      {% if interface.portName.replaceAll(\"^[a-zA-Z]+(\\\\d+)/(\\\\d+)/(\\\\d+)\", \"$2\") != 1 %}\n        interface {{ interface.portName }}\n          {{ baseconf_interface() }}\n      {% endif %}\n    {% endif %}\n  {% endif %}\n{% endfor %}\n!\ninterface GigabitEthernet0/0\n no ip address\n shutdown\n!\n",
        "rollbackTemplateContent": "",
        "templateParams": [
          {
            "parameterName": "Site",
            "dataType": "STRING",
            "defaultValue": null,
            "description": "The Letter denotes the VLAN Schema\n         AP, Data, Voice, Guest, Disabled\nA = 10,20,30,40,99\nB = 20,30,40,50,99",
            "required": true,
            "notParam": false,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": {
              "selectionType": "SINGLE_SELECT",
              "selectionValues": {
                "A": "A",
                "B": "B"
              },
              "defaultSelectedValues": [
                "A"
              ],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": "VLAN Schema for Site"
          },
          {
            "parameterName": "__interface",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": true,
            "instructionText": null,
            "group": null,
            "order": 2,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": null
          },
          {
            "parameterName": "vlan_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 3,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": null
          },
          {
            "parameterName": "voice_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 4,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": null
          }
        ],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# Interface Configurations #}\n{% include \"DNAC-Templates-Samples/Interfaces-Macros\" %}\n{% include \"DNAC-Templates-Samples/VLAN-Configuration\" %}\n!\n{% set vlanArray = [] %}\n{% if Site == \"A\" %}\n  {{ configure_vlans(SiteAvlans) }}\n  {{ search_vlans(SiteAvlans) }}\n{% elif Site == \"B\" %}\n  {{ configure_vlans(SiteBvlans) }}\n  {{ search_vlans(SiteBvlans) }}\n{% endif %}\n!\n{# Determine whether target is Dual or Single Uplink Target #}\n{% set uplink_portarray = [] %}\n{% for interface in __interface %}\n  {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n    {% do uplink_portarray.append(interface.portName) %}\n  {% endif %}\n{% endfor %}\n!\n{% if uplink_portarray | length == 2 %}\n  {{ configure_stp_dualuplink(vlanArray) }}\n{% elif uplink_portarray | length == 1 %}\n  {{ configure_stp_singleuplink(vlanArray) }}\n{% endif %}\n!\n{{ autoconf_accesspoint(vlanArray[0]) }}\n{{ autoconf_workstation(vlanArray[1], vlanArray[2]) }}\n{{ autoconf_baseconfig(vlanArray[1]) }}\n!\n{% include \"DNAC-Templates-Samples/AutoConf-Configuration\" %}\n!\n{# Interface Interations #}\n!\n{# System Variable example interfaces in one logical code construct #}\n{% for interface in __interface %}\n  {% if interface.interfaceType == \"Physical\" && interface.portName.replaceAll(\"(^[a-zA-Z]+).*\",\"$1\") == \"GigabitEthernet\"  %}\n    {% if interface.portName.replaceAll(\"(^[a-zA-Z]+.).*\", \"$1\") != \"GigabitEthernet0\" %}\n      {% if interface.portName.replaceAll(\"^[a-zA-Z]+(\\\\d+)/(\\\\d+)/(\\\\d+)\", \"$2\") != 1 %}\n        interface {{ interface.portName }}\n          {{ baseconf_interface() }}\n      {% endif %}\n    {% endif %}\n  {% endif %}\n{% endfor %}\n!\ninterface GigabitEthernet0/0\n no ip address\n shutdown\n!\n",
        "promotedTemplateParams": [
          {
            "parameterName": "voice_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 4,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": null
          },
          {
            "parameterName": "Site",
            "dataType": "STRING",
            "defaultValue": null,
            "description": "The Letter denotes the VLAN Schema\n         AP, Data, Voice, Guest, Disabled\nA = 10,20,30,40,99\nB = 20,30,40,50,99",
            "required": true,
            "notParam": false,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": {
              "selectionType": "SINGLE_SELECT",
              "selectionValues": {
                "A": "A",
                "B": "B"
              },
              "defaultSelectedValues": [
                "A"
              ],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": "VLAN Schema for Site"
          },
          {
            "parameterName": "__interface",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": true,
            "instructionText": null,
            "group": null,
            "order": 2,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": null
          },
          {
            "parameterName": "vlan_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 3,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": null
          }
        ],
        "customParamsOrder": false,
        "createTime": 1674762318655,
        "lastUpdateTime": 1675646686888,
        "latestVersionTime": 1674762318655,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "f498908f-1706-4e85-b3a1-2c23e02139ee",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "Stacking-Configuration",
        "description": "Used for 9300 and 9200 to automatically build Stackwise 9200 and 9300 switches and Powerstacks for 9300",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{#- 9300 Stack Power and 9300, 9200 Priority -#}\n{% set StackCount = __device.platformId | split(\",\")  %}\n{% set StackMemberCount =  StackCount | length  -%}\n\n{% if StackMemberCount > 1 %}\n  {% if \"C93\" in __device.platformId %}\n     stack-power stack Powerstack1\n     mode redundant strict\n     {% if StackMemberCount > 4 %}\n        stack-power stack Powerstack2\n        mode redundant strict\n     {% endif %}\n     {% for Switch in range(0,StackMemberCount,1) %}\n        {% if loop.index <= (StackMemberCount/2|round('ceil')) %}\n           stack-power switch {{ loop.index }}\n           stack Powerstack1\n        {% elif loop.index > (StackMemberCount/2|round('ceil')) %}\n           stack-power switch {{ loop.index }}\n           stack Powerstack2\n        {% endif %}\n     {% endfor %}\n  {% endif %}\n  #MODE_ENABLE\n  {% for Switch in range(0,StackMemberCount,1) %}\n    {% if loop.index == 1 %}\n       switch {{ loop.index }} priority 10\n    {% elif Switch == 2 %}\n       switch {{ loop.index }} priority 9\n    {% else %}\n       switch {{ loop.index }} priority 8\n    {% endif %}\n  {% endfor %}\n  #MODE_END_ENABLE\n{% endif %}",
        "rollbackTemplateContent": "",
        "templateParams": [
          {
            "parameterName": "__device",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": null,
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": null
          }
        ],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{#- 9300 Stack Power and 9300, 9200 Priority -#}\n{% set StackCount = __device.platformId | split(\",\")  %}\n{% set StackMemberCount =  StackCount | length  -%}\n\n{% if StackMemberCount > 1 %}\n  {% if \"C93\" in __device.platformId %}\n     stack-power stack Powerstack1\n     mode redundant strict\n     {% if StackMemberCount > 4 %}\n        stack-power stack Powerstack2\n        mode redundant strict\n     {% endif %}\n     {% for Switch in range(0,StackMemberCount,1) %}\n        {% if loop.index <= (StackMemberCount/2|round('ceil')) %}\n           stack-power switch {{ loop.index }}\n           stack Powerstack1\n        {% elif loop.index > (StackMemberCount/2|round('ceil')) %}\n           stack-power switch {{ loop.index }}\n           stack Powerstack2\n        {% endif %}\n     {% endfor %}\n  {% endif %}\n  #MODE_ENABLE\n  {% for Switch in range(0,StackMemberCount,1) %}\n    {% if loop.index == 1 %}\n       switch {{ loop.index }} priority 10\n    {% elif Switch == 2 %}\n       switch {{ loop.index }} priority 9\n    {% else %}\n       switch {{ loop.index }} priority 8\n    {% endif %}\n  {% endfor %}\n  #MODE_END_ENABLE\n{% endif %}",
        "promotedTemplateParams": [
          {
            "parameterName": "__device",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": null,
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": null
          }
        ],
        "customParamsOrder": false,
        "createTime": 1674762318611,
        "lastUpdateTime": 1675548141961,
        "latestVersionTime": 1674762318611,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "9beec1bb-9a23-434b-a8b1-c582ada9cfd0",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "DynamicPort-EEM-Scripting",
        "description": "This configuration is designed to be used when it is required to change between 802.1x authentication policies from closed to low-impact mode.",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{#- Dynamic Port EEM Description Script -#}\n{#- This will always ensure the compliant port configurations on interfaces -#}\n{#- Switches within the infrastructure -#}\nevent manager applet DETECT_SW_INT_DOWN\n event syslog pattern \"%LINK.* Interface.* changed state to .* down\"\n action 10     regexp \"Interface ([^ ]+),\" \"$_syslog_msg\" match intf\n action 20     cli command \"enable\"\n action 30     cli command \"show run interface $intf | inc channel-group mode\"\n action 40     regexp \"(^channel-group)\" \"$_cli_result\"\n action 50     if $_regexp_result ne \"1\"\n action 50.10  puts \"AP Trunk Interface DOWN. INSTALL BASECONFIG on Interface $intf\"\n action 50.11  cli command \"enable\"\n action 50.12  cli command \"conf t\"\n action 50.13  cli command \"default interface $intf\"\n action 50.14  cli command \"interface $intf\"\n action 50.15  cli command \" access-session inherit disable interface-template-sticky\"\n action 50.16  cli command \"default interface $intf\"\n action 50.17  cli command \"interface $intf\"\n action 50.18  cli command \" description BASE CONFIG\"\n action 50.20  cli command \" switchport mode access\"\n action 50.23  cli command \" device-tracking attach-policy IPDT_POLICY\"\n action 50.24  cli command \" snmp trap mac-notification change added\"\n action 50.25  cli command \" snmp trap mac-notification change removed\"\n action 50.26  cli command \" source template WORKSTATION\"\n action 50.27  cli command \" spanning-tree portfast\"\n action 50.28  cli command \" spanning-tree bpduguard enable\"\n action 60     else\n action 70     puts \"Non-EMM port Interface $intf went down.\"\n action 80     end\n action 90     cli command \"write\"\n action 99     cli command \"exit\"\n!\nevent manager applet DETECT_SW_IEEE_POE_UP\n event syslog pattern \"%.*POWER.*GRANTED.* Interface.*\"\n action 10     regexp \"Interface ([^ ]+):\" \"$_syslog_msg\" match intf\n action 20     cli command \"enable\"\n action 30     cli command \"show run interface $intf | inc channel-group mode\"\n action 40     regexp \"(^channel-group)\" \"$_cli_result\"\n action 50     if $_regexp_result ne \"1\"\n action 50.10  puts \"POE Device Detected. INSTALL LOWIMPACT on Interface $intf\"\n action 50.11  cli command \"enable\"\n action 50.12  cli command \"conf t\"\n action 50.13  cli command \"default interface $intf\"\n action 50.14  cli command \"interface $intf\"\n action 50.15  cli command \" description AP CONFIG\"\n action 50.16  cli command \" switchport access vlan 10\"\n action 50.17  cli command \" switchport mode access\"\n action 50.20  cli command \" device-tracking attach-policy IPDT_POLICY\"\n action 50.21  cli command \" snmp trap mac-notification change added\"\n action 50.22  cli command \" snmp trap mac-notification change removed\"\n action 50.23  cli command \" source template ACCESS_POINT\"\n action 50.24  cli command \" spanning-tree portfast\"\n action 50.25  cli command \" spanning-tree bpduguard enable\"\n action 80     end\n action 90     cli command \"write\"\n action 99     cli command \"exit\"\n",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{#- Dynamic Port EEM Description Script -#}\n{#- This will always ensure the compliant port configurations on interfaces -#}\n{#- Switches within the infrastructure -#}\nevent manager applet DETECT_SW_INT_DOWN\n event syslog pattern \"%LINK.* Interface.* changed state to .* down\"\n action 10     regexp \"Interface ([^ ]+),\" \"$_syslog_msg\" match intf\n action 20     cli command \"enable\"\n action 30     cli command \"show run interface $intf | inc channel-group mode\"\n action 40     regexp \"(^channel-group)\" \"$_cli_result\"\n action 50     if $_regexp_result ne \"1\"\n action 50.10  puts \"AP Trunk Interface DOWN. INSTALL BASECONFIG on Interface $intf\"\n action 50.11  cli command \"enable\"\n action 50.12  cli command \"conf t\"\n action 50.13  cli command \"default interface $intf\"\n action 50.14  cli command \"interface $intf\"\n action 50.15  cli command \" access-session inherit disable interface-template-sticky\"\n action 50.16  cli command \"default interface $intf\"\n action 50.17  cli command \"interface $intf\"\n action 50.18  cli command \" description BASE CONFIG\"\n action 50.20  cli command \" switchport mode access\"\n action 50.23  cli command \" device-tracking attach-policy IPDT_POLICY\"\n action 50.24  cli command \" snmp trap mac-notification change added\"\n action 50.25  cli command \" snmp trap mac-notification change removed\"\n action 50.26  cli command \" source template WORKSTATION\"\n action 50.27  cli command \" spanning-tree portfast\"\n action 50.28  cli command \" spanning-tree bpduguard enable\"\n action 60     else\n action 70     puts \"Non-EMM port Interface $intf went down.\"\n action 80     end\n action 90     cli command \"write\"\n action 99     cli command \"exit\"\n!\nevent manager applet DETECT_SW_IEEE_POE_UP\n event syslog pattern \"%.*POWER.*GRANTED.* Interface.*\"\n action 10     regexp \"Interface ([^ ]+):\" \"$_syslog_msg\" match intf\n action 20     cli command \"enable\"\n action 30     cli command \"show run interface $intf | inc channel-group mode\"\n action 40     regexp \"(^channel-group)\" \"$_cli_result\"\n action 50     if $_regexp_result ne \"1\"\n action 50.10  puts \"POE Device Detected. INSTALL LOWIMPACT on Interface $intf\"\n action 50.11  cli command \"enable\"\n action 50.12  cli command \"conf t\"\n action 50.13  cli command \"default interface $intf\"\n action 50.14  cli command \"interface $intf\"\n action 50.15  cli command \" description AP CONFIG\"\n action 50.16  cli command \" switchport access vlan 10\"\n action 50.17  cli command \" switchport mode access\"\n action 50.20  cli command \" device-tracking attach-policy IPDT_POLICY\"\n action 50.21  cli command \" snmp trap mac-notification change added\"\n action 50.22  cli command \" snmp trap mac-notification change removed\"\n action 50.23  cli command \" source template ACCESS_POINT\"\n action 50.24  cli command \" spanning-tree portfast\"\n action 50.25  cli command \" spanning-tree bpduguard enable\"\n action 80     end\n action 90     cli command \"write\"\n action 99     cli command \"exit\"\n",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1675030051621,
        "lastUpdateTime": 1675547501876,
        "latestVersionTime": 1675547508281,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "17752ba6-aadf-471f-b5b5-68a258227af0",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "DNAC-Composite-Autoconf",
        "description": "Automatically configures Target with AutoConf Configuration for VLANs and Host facing ports.",
        "tags": [
          {
            "id": "56f5a995-3afc-413d-b6ef-c9efa78e145e",
            "name": "DNAC-AUTO-SAMPLE-TEMPLATES"
          }
        ],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": true,
        "containingTemplates": [
          {
            "name": "SystemManagement-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "Global configurations on Target",
            "projectName": "DNAC-Templates-Samples"
          },
          {
            "name": "Stacking-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "Used for 9300 and 9200 to automatically build Stackwise 9200 and 9300 switches and Powerstacks for 9300",
            "projectName": "DNAC-Templates-Samples"
          },
          {
            "name": "Security-AAA-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "Extraneous AAA Configurations ",
            "projectName": "DNAC-Templates-Samples"
          },
          {
            "name": "Interfaces-Autoconf-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "AutoConf Configuration for VLANs and Host facing ports.",
            "projectName": "DNAC-Templates-Samples"
          },
          {
            "name": "AutoNaming-EEM-Scripting",
            "composite": false,
            "language": "JINJA",
            "description": "This configuration automatically adds descriptions to interfaces with connected device information. It includes a self-deleting EEM script to initially clear the CDP and LLDP table",
            "projectName": "DNAC-Templates-Samples"
          }
        ],
        "failurePolicy": "CONTINUE_ON_ERROR",
        "language": "VELOCITY",
        "promotedTemplateContent": "[{\"name\":\"SystemManagement-Configuration\",\"id\":\"803f581e-579d-483f-b8cf-add3fd81f85d\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"Global configurations on Target\"},{\"name\":\"Stacking-Configuration\",\"id\":\"9beec1bb-9a23-434b-a8b1-c582ada9cfd0\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"Used for 9300 and 9200 to automatically build Stackwise 9200 and 9300 switches and Powerstacks for 9300\"},{\"name\":\"Security-AAA-Configuration\",\"id\":\"2726ce72-921a-47ab-bcca-8cd519cfb749\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"Extraneous AAA Configurations \"},{\"name\":\"Interfaces-Autoconf-Configuration\",\"id\":\"f498908f-1706-4e85-b3a1-2c23e02139ee\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"AutoConf Configuration for VLANs and Host facing ports.\"},{\"name\":\"AutoNaming-EEM-Scripting\",\"id\":\"ff182190-f890-49f3-b09a-a27494cedf5c\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"This configuration automatically adds descriptions to interfaces with connected device information. It includes a self-deleting EEM script to initially clear the CDP and LLDP table\"}]",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1674762319293,
        "lastUpdateTime": 1675550456063,
        "latestVersionTime": 1674762319293,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "932ea38b-ab78-42a7-8b51-78ec7dc92efe",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "DNAC-Composite-IBNS2.0",
        "description": "Automatically configures Target with IBNS2.0 Configuration for VLANs and Host facing ports.",
        "tags": [
          {
            "id": "f4d5656b-fd19-4278-a9c5-041d4f597d36",
            "name": "DNAC-IBNS-SAMPLE-TEMPLATES"
          }
        ],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": true,
        "containingTemplates": [
          {
            "name": "SystemManagement-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "Global configurations on Target",
            "projectName": "DNAC-Templates-Samples"
          },
          {
            "name": "Stacking-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "Used for 9300 and 9200 to automatically build Stackwise 9200 and 9300 switches and Powerstacks for 9300",
            "projectName": "DNAC-Templates-Samples"
          },
          {
            "name": "Security-AAA-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "Extraneous AAA Configurations ",
            "projectName": "DNAC-Templates-Samples"
          },
          {
            "name": "Interfaces-IBNS2.0-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "IBNS2.0 Configuration for VLANs and Host facing ports.",
            "projectName": "DNAC-Templates-Samples"
          },
          {
            "name": "AutoNaming-EEM-Scripting",
            "composite": false,
            "language": "JINJA",
            "description": "This configuration automatically adds descriptions to interfaces with connected device information. It includes a self-deleting EEM script to initially clear the CDP and LLDP table",
            "projectName": "DNAC-Templates-Samples"
          }
        ],
        "failurePolicy": "CONTINUE_ON_ERROR",
        "language": "VELOCITY",
        "promotedTemplateContent": "[{\"name\":\"SystemManagement-Configuration\",\"id\":\"803f581e-579d-483f-b8cf-add3fd81f85d\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"Global configurations on Target\"},{\"name\":\"Stacking-Configuration\",\"id\":\"9beec1bb-9a23-434b-a8b1-c582ada9cfd0\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"Used for 9300 and 9200 to automatically build Stackwise 9200 and 9300 switches and Powerstacks for 9300\"},{\"name\":\"Security-AAA-Configuration\",\"id\":\"2726ce72-921a-47ab-bcca-8cd519cfb749\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"Extraneous AAA Configurations \"},{\"name\":\"Interfaces-IBNS2.0-Configuration\",\"id\":\"028f33b0-01fd-4b89-9fe3-75392bedd46c\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"IBNS2.0 Configuration for VLANs and Host facing ports.\"},{\"name\":\"AutoNaming-EEM-Scripting\",\"id\":\"ff182190-f890-49f3-b09a-a27494cedf5c\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"This configuration automatically adds descriptions to interfaces with connected device information. It includes a self-deleting EEM script to initially clear the CDP and LLDP table\"}]",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1675029311888,
        "lastUpdateTime": 1675550492331,
        "latestVersionTime": 1675550506158,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "99b8e361-7991-43c1-95ca-0dae7bf3e814",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "AutoNaming-EEM-Scripting",
        "description": "This configuration automatically adds descriptions to interfaces with connected device information. It includes a self-deleting EEM script to initially clear the CDP and LLDP table",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{#- Automated Uplink Description Script -#}\n{#- This will always ensure the uplink descriptions are correct to upstream -#}\n{#- Switches within the infrastructure  -#}\n event manager applet update-port\n  event neighbor-discovery interface regexp GigabitEthernet.* cdp add\n  action 101 regexp \"(Switch|Router)\" \"$_nd_cdp_capabilities_string\"\n  action 200 if $_regexp_result eq \"1\"\n  action 201  regexp \"(Trans-Bridge)\" \"$_nd_cdp_capabilities_string\"\n  action 210  if $_regexp_result eq \"1\"\n  action 211   cli command \"enable\"\n  action 212   cli command \"config t\"\n  action 213   cli command \"interface $_nd_local_intf_name\"\n  action 214   regexp \"^([^\\.]+)\" \"$_nd_cdp_entry_name\" match host\n  action 215   regexp \"^([^\\.]+)\" \"$_nd_port_id\" match connectedport\n  action 216   cli command \"no description\"\n  action 217   cli command \"description AP - $host - $connectedport\"\n  action 220  else\n  action 221   cli command \"enable\"\n  action 222   cli command \"config t\"\n  action 223   cli command \"interface $_nd_local_intf_name\"\n  action 224   regexp \"^([^\\.]+)\\.\" \"$_nd_cdp_entry_name\" match host\n  action 225   regexp \"^([^\\.]+)\" \"$_nd_port_id\" match connectedport\n  action 226   cli command \"no description\"\n  action 227   cli command \"description Link - $host - $connectedport\"\n  action 240  end\n  action 250 else\n  action 251  regexp \"(Phone)\" \"$_nd_cdp_capabilities_string\"\n  action 252  if $_regexp_result eq \"1\"\n  action 253   cli command \"enable\"\n  action 254   cli command \"config t\"\n  action 255   cli command \"interface $_nd_local_intf_name\"\n  action 256   regexp \"^([^\\.]+)\" \"$_nd_cdp_entry_name\" match host\n  action 257   regexp \"^([^\\.]+)\" \"$_nd_port_id\" match connectedport\n  action 258   cli command \"no description\"\n  action 259   cli command \"description Phone - $host - $connectedport\"\n  action 260  end\n  action 270 end\n  action 280 cli command \"write\"\n!\nevent manager applet POST_PNP\n event timer countdown time 30\n action 1.0 cli command \"enable\"\n action 1.1 cli command \"clear cdp table\"\n action 2.0 cli command \"config t\"\n action 2.1 cli command \"no event manager applet POST_PNP\"\n action 2.2 cli command \"end\"\n action 2.3 cli command \"wr\"\n action 2.4 cli command \"exit\"",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{#- Automated Uplink Description Script -#}\n{#- This will always ensure the uplink descriptions are correct to upstream -#}\n{#- Switches within the infrastructure  -#}\n event manager applet update-port\n  event neighbor-discovery interface regexp GigabitEthernet.* cdp add\n  action 101 regexp \"(Switch|Router)\" \"$_nd_cdp_capabilities_string\"\n  action 200 if $_regexp_result eq \"1\"\n  action 201  regexp \"(Trans-Bridge)\" \"$_nd_cdp_capabilities_string\"\n  action 210  if $_regexp_result eq \"1\"\n  action 211   cli command \"enable\"\n  action 212   cli command \"config t\"\n  action 213   cli command \"interface $_nd_local_intf_name\"\n  action 214   regexp \"^([^\\.]+)\" \"$_nd_cdp_entry_name\" match host\n  action 215   regexp \"^([^\\.]+)\" \"$_nd_port_id\" match connectedport\n  action 216   cli command \"no description\"\n  action 217   cli command \"description AP - $host - $connectedport\"\n  action 220  else\n  action 221   cli command \"enable\"\n  action 222   cli command \"config t\"\n  action 223   cli command \"interface $_nd_local_intf_name\"\n  action 224   regexp \"^([^\\.]+)\\.\" \"$_nd_cdp_entry_name\" match host\n  action 225   regexp \"^([^\\.]+)\" \"$_nd_port_id\" match connectedport\n  action 226   cli command \"no description\"\n  action 227   cli command \"description Link - $host - $connectedport\"\n  action 240  end\n  action 250 else\n  action 251  regexp \"(Phone)\" \"$_nd_cdp_capabilities_string\"\n  action 252  if $_regexp_result eq \"1\"\n  action 253   cli command \"enable\"\n  action 254   cli command \"config t\"\n  action 255   cli command \"interface $_nd_local_intf_name\"\n  action 256   regexp \"^([^\\.]+)\" \"$_nd_cdp_entry_name\" match host\n  action 257   regexp \"^([^\\.]+)\" \"$_nd_port_id\" match connectedport\n  action 258   cli command \"no description\"\n  action 259   cli command \"description Phone - $host - $connectedport\"\n  action 260  end\n  action 270 end\n  action 280 cli command \"write\"\n!\nevent manager applet POST_PNP\n event timer countdown time 30\n action 1.0 cli command \"enable\"\n action 1.1 cli command \"clear cdp table\"\n action 2.0 cli command \"config t\"\n action 2.1 cli command \"no event manager applet POST_PNP\"\n action 2.2 cli command \"end\"\n action 2.3 cli command \"wr\"\n action 2.4 cli command \"exit\"",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1675029538674,
        "lastUpdateTime": 1675547249985,
        "latestVersionTime": 1675547255836,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "ff182190-f890-49f3-b09a-a27494cedf5c",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "DNAC-Composite-Standard",
        "description": "Automatically configures Target with Standard Configuration for VLANs and Host facing ports.",
        "tags": [
          {
            "id": "99398f9b-a2b3-4a20-83b4-8cb28ce5ad17",
            "name": "DNAC-STRD-SAMPLE-TEMPLATES"
          }
        ],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": true,
        "containingTemplates": [
          {
            "name": "SystemManagement-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "Global configurations on Target",
            "projectName": "DNAC-Templates-Samples"
          },
          {
            "name": "Stacking-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "Used for 9300 and 9200 to automatically build Stackwise 9200 and 9300 switches and Powerstacks for 9300",
            "projectName": "DNAC-Templates-Samples"
          },
          {
            "name": "Security-AAA-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "Extraneous AAA Configurations ",
            "projectName": "DNAC-Templates-Samples"
          },
          {
            "name": "Interfaces-Standard-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "Standard Configuration for VLANs and Host facing ports.",
            "projectName": "DNAC-Templates-Samples"
          },
          {
            "name": "AutoNaming-EEM-Scripting",
            "composite": false,
            "language": "JINJA",
            "description": "This configuration automatically adds descriptions to interfaces with connected device information. It includes a self-deleting EEM script to initially clear the CDP and LLDP table",
            "projectName": "DNAC-Templates-Samples"
          }
        ],
        "failurePolicy": "CONTINUE_ON_ERROR",
        "language": "VELOCITY",
        "promotedTemplateContent": "[{\"name\":\"SystemManagement-Configuration\",\"id\":\"803f581e-579d-483f-b8cf-add3fd81f85d\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"Global configurations on Target\"},{\"name\":\"Stacking-Configuration\",\"id\":\"9beec1bb-9a23-434b-a8b1-c582ada9cfd0\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"Used for 9300 and 9200 to automatically build Stackwise 9200 and 9300 switches and Powerstacks for 9300\"},{\"name\":\"Security-AAA-Configuration\",\"id\":\"2726ce72-921a-47ab-bcca-8cd519cfb749\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"Extraneous AAA Configurations \"},{\"name\":\"Interfaces-Standard-Configuration\",\"id\":\"b27b9485-8076-4ed3-bc99-edad41e26942\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"Standard Configuration for VLANs and Host facing ports.\"},{\"name\":\"AutoNaming-EEM-Scripting\",\"id\":\"ff182190-f890-49f3-b09a-a27494cedf5c\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"This configuration automatically adds descriptions to interfaces with connected device information. It includes a self-deleting EEM script to initially clear the CDP and LLDP table\"}]",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1675087335156,
        "lastUpdateTime": 1675550619066,
        "latestVersionTime": 1675550626884,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "5630de8e-e194-4c1f-891a-b30fbba0befe",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "Interfaces-IBNS2.0-Configuration",
        "description": "IBNS2.0 Configuration for VLANs and Host facing ports.",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# Interface Configurations #}\n{% include \"DNAC-Templates-Samples/Interfaces-Macros\" %}\n{% include \"DNAC-Templates-Samples/VLAN-Configuration\" %}\n{% include \"DNAC-Templates-Samples/IBNS2.0-Configuration\" %}\n!\n!\n{% set vlanArray = [] %}\n{% if Site == \"A\" %}\n  {{ configure_vlans(SiteAvlans) }}\n  {{ search_vlans(SiteAvlans) }}\n  {{ configure_cts(SiteAvlans) }}\n{% elif Site == \"B\" %}\n  {{ configure_vlans(SiteBvlans) }}\n  {{ search_vlans(SiteBvlans) }}\n  {{ configure_cts(SiteBvlans) }}\n{% endif %}\n!\n{# Determine whether target is Dual or Single Uplink Target #}\n{% set uplink_portarray = [] %}\n{% for interface in __interface %}\n  {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n    {% do uplink_portarray.append(interface.portName) %}\n  {% endif %}\n{% endfor %}\n!\n{% if uplink_portarray | length == 2 %}\n  {{ configure_stp_dualuplink(vlanArray) }}\n{% elif uplink_portarray | length == 1 %}\n  {{ configure_stp_singleuplink(vlanArray) }}\n{% endif %}\n!\n{{ ibns_baseconfig(vlanArray[1]) }}\n{{ ibns_accesspoint(vlanArray[0]) }}\n{{ ibns_flexaccesspoint(vlanArray[0], vlanArray[1], vlanArray[2], vlanArray[3]) }} \n{{ ibns_workstation(vlanArray[1], vlanArray[2]) }}\n{{ ibns_guest(vlanArray[3]) }} \n!\n{# Interface Interations #}\n!\n{# System Variable example interfaces in one logical code construct #}\n{% for interface in __interface %}\n  {% if interface.interfaceType == \"Physical\" && interface.portName.replaceAll(\"(^[a-zA-Z]+).*\",\"$1\") == \"GigabitEthernet\"  %}\n    {% if interface.portName.replaceAll(\"(^[a-zA-Z]+.).*\", \"$1\") != \"GigabitEthernet0\" %}\n      {% if interface.portName.replaceAll(\"^[a-zA-Z]+(\\\\d+)/(\\\\d+)/(\\\\d+)\", \"$2\") != 1 %}\n        interface {{ interface.portName }}\n          {{ ibns_baseconf_interface() }}\n      {% endif %}\n    {% endif %}\n  {% endif %}\n{% endfor %}\n!\ninterface GigabitEthernet0/0\n no ip address\n shutdown\n!\n{#- Automated Script for cts manual disruptive config -#}\n{#- This will always ensure the uplink get the cts manual for with  -#}\n{#- timed self deleting EEM script  -#}\nevent manager applet POST_CTS_MANUAL\n event timer countdown time 30\n action 1.0 cli command \"enable\"\n action 1.1 cli command \"config t\"\n action 2.0 cli command \"interface range {{ uplink_portarray|join(',') }}\"\n action 2.1 cli command \"cts manual\"\n action 2.2 cli command \"policy static sgt 2 trusted\"\n action 2.3 cli command \"no event manager applet POST_CTS_MANUAL\"\n action 2.4 cli command \"end\"\n action 2.5 cli command \"wr\"\n action 2.6 cli command \"exit\"\n",
        "rollbackTemplateContent": "",
        "templateParams": [
          {
            "parameterName": "Site",
            "dataType": "STRING",
            "defaultValue": null,
            "description": "The Letter denotes the VLAN Schema\n         AP, Data, Voice, Guest, Disabled\nA = 10,20,30,40,99\nB = 20,30,40,50,99",
            "required": true,
            "notParam": false,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": {
              "selectionType": "SINGLE_SELECT",
              "selectionValues": {
                "A": "A",
                "B": "B"
              },
              "defaultSelectedValues": [
                "A"
              ],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": "VLAN Schema for Site"
          },
          {
            "parameterName": "voice_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 5,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": null
          },
          {
            "parameterName": "data_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 4,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": null
          },
          {
            "parameterName": "vlan_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 3,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": null
          },
          {
            "parameterName": "__interface",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": true,
            "instructionText": null,
            "group": null,
            "order": 2,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": null
          },
          {
            "parameterName": "guest_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 6,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "displayName": null
          }
        ],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# Interface Configurations #}\n{% include \"DNAC-Templates-Samples/Interfaces-Macros\" %}\n{% include \"DNAC-Templates-Samples/VLAN-Configuration\" %}\n{% include \"DNAC-Templates-Samples/IBNS2.0-Configuration\" %}\n!\n!\n{% set vlanArray = [] %}\n{% if Site == \"A\" %}\n  {{ configure_vlans(SiteAvlans) }}\n  {{ search_vlans(SiteAvlans) }}\n  {{ configure_cts(SiteAvlans) }}\n{% elif Site == \"B\" %}\n  {{ configure_vlans(SiteBvlans) }}\n  {{ search_vlans(SiteBvlans) }}\n  {{ configure_cts(SiteBvlans) }}\n{% endif %}\n!\n{# Determine whether target is Dual or Single Uplink Target #}\n{% set uplink_portarray = [] %}\n{% for interface in __interface %}\n  {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n    {% do uplink_portarray.append(interface.portName) %}\n  {% endif %}\n{% endfor %}\n!\n{% if uplink_portarray | length == 2 %}\n  {{ configure_stp_dualuplink(vlanArray) }}\n{% elif uplink_portarray | length == 1 %}\n  {{ configure_stp_singleuplink(vlanArray) }}\n{% endif %}\n!\n{{ ibns_baseconfig(vlanArray[1]) }}\n{{ ibns_accesspoint(vlanArray[0]) }}\n{{ ibns_flexaccesspoint(vlanArray[0], vlanArray[1], vlanArray[2], vlanArray[3]) }} \n{{ ibns_workstation(vlanArray[1], vlanArray[2]) }}\n{{ ibns_guest(vlanArray[3]) }} \n!\n{# Interface Interations #}\n!\n{# System Variable example interfaces in one logical code construct #}\n{% for interface in __interface %}\n  {% if interface.interfaceType == \"Physical\" && interface.portName.replaceAll(\"(^[a-zA-Z]+).*\",\"$1\") == \"GigabitEthernet\"  %}\n    {% if interface.portName.replaceAll(\"(^[a-zA-Z]+.).*\", \"$1\") != \"GigabitEthernet0\" %}\n      {% if interface.portName.replaceAll(\"^[a-zA-Z]+(\\\\d+)/(\\\\d+)/(\\\\d+)\", \"$2\") != 1 %}\n        interface {{ interface.portName }}\n          {{ ibns_baseconf_interface() }}\n      {% endif %}\n    {% endif %}\n  {% endif %}\n{% endfor %}\n!\ninterface GigabitEthernet0/0\n no ip address\n shutdown\n!\n{#- Automated Script for cts manual disruptive config -#}\n{#- This will always ensure the uplink get the cts manual for with  -#}\n{#- timed self deleting EEM script  -#}\nevent manager applet POST_CTS_MANUAL\n event timer countdown time 30\n action 1.0 cli command \"enable\"\n action 1.1 cli command \"config t\"\n action 2.0 cli command \"interface range {{ uplink_portarray|join(',') }}\"\n action 2.1 cli command \"cts manual\"\n action 2.2 cli command \"policy static sgt 2 trusted\"\n action 2.3 cli command \"no event manager applet POST_CTS_MANUAL\"\n action 2.4 cli command \"end\"\n action 2.5 cli command \"wr\"\n action 2.6 cli command \"exit\"\n",
        "promotedTemplateParams": [
          {
            "parameterName": "voice_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 5,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": null
          },
          {
            "parameterName": "guest_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 6,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": null
          },
          {
            "parameterName": "Site",
            "dataType": "STRING",
            "defaultValue": null,
            "description": "The Letter denotes the VLAN Schema\n         AP, Data, Voice, Guest, Disabled\nA = 10,20,30,40,99\nB = 20,30,40,50,99",
            "required": true,
            "notParam": false,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": {
              "selectionType": "SINGLE_SELECT",
              "selectionValues": {
                "A": "A",
                "B": "B"
              },
              "defaultSelectedValues": [
                "A"
              ],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": "VLAN Schema for Site"
          },
          {
            "parameterName": "data_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 4,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": null
          },
          {
            "parameterName": "vlan_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "instructionText": null,
            "group": null,
            "order": 3,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": null
          },
          {
            "parameterName": "__interface",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": true,
            "instructionText": null,
            "group": null,
            "order": 2,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null,
            "displayName": null
          }
        ],
        "customParamsOrder": false,
        "createTime": 1675031438349,
        "lastUpdateTime": 1675646745469,
        "latestVersionTime": 1675646750971,
        "projectName": "DNAC-Templates-Samples",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "028f33b0-01fd-4b89-9fe3-75392bedd46c",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      }
    ],
    "isDeletable": true
  }
]